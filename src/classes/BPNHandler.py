#! /usr/bin/python -W ignore::FutureWarning
from classes.BackPropagationNetwork import *
from classes.Dataset import *
from classes.LightDataset import *
from classes.LiveDataset import *
from classes.Settings import *
import utils, hand
import numpy as np
import sys, math
import scipy.stats, scipy.ndimage
import cv2
from copy import deepcopy
import time


class BPNHandler():
	
	settings = Settings()
	Dmin,Dmax = 50, 4000
	
	# Hold all input feature data
	trainingInput, testingInput = [], []
	
	# Hold informations about the current input
	currentH, currentW = 0, 0
	currentBinary, currentExtracted = [], []
	
	# Hold the transformations applied to the current input
	top, left, bottom, right = 0, 0, 0, 0
	angle = 0
	
	target = []
	count = 0
	
	bpn = None
	
	def __init__(self, live=False):
		# Initialise the network if in live mode
		if live:
			# Define the functions that will be used
			lFuncs = [None, gaussian, sgm]
		
			# Create the network
			self.bpn = BackPropagationNetwork((6, 15, 4), lFuncs)
			self.bpn.setWeights(self.getWeights())
			
			self.thresholdBinary = np.vectorize(self.thresholdBinary)
			self.thresholdExtracted = np.vectorize(self.thresholdExtracted)
	
	def thresholdBinary(self, x, start, end):
	    return 0 if x<start or x>end or x==0 else 1
	
	def thresholdExtracted(self, x, start, end):
	    return np.NaN if x<start or x>end or x==0 else x
	
	def loadPositive(self, positive, target):
		print
		print "Loading positive data"
		
		for i in range(len(positive)):
			for j in positive[i]:
				#print("Loading positive {0}".format(j))
				file = self.settings.getPositiveLightFolder()+str(j).zfill(3)+".json"
				data = utils.loadJsonFromFile(file)
				self.trainingInput.append(self.getFeaturesLight(data))
				self.target.append(target[i])
				self.count += 1
	
	def loadNegative(self, negative, targetLength):
		print
		print "Loading negative data"
		
		# Create the negative target thanks to the positive one
		negativeTarget = np.zeros(targetLength).astype(int)
		
		for i in negative:
			#print("Loading negative {0}".format(i))
			file = self.settings.getNegativeLightFolder()+str(i).zfill(3)+".json"
			data = utils.loadJsonFromFile(file)
			self.trainingInput.append(self.getFeaturesLight(data))
			self.target.append(negativeTarget)
			self.count += 1
	
	def full(self):
		self.trainingInput = np.array([
			[1.5,30.5074971165,28.9504036909,29.2964244521,30.1614763552,17.877739331,11.4186851211,12.6297577855,17.5317185698,3.86389850058,4.38292964245,2.88350634371,6.74740484429,4.38292964245,0.461361014994,5.8246828143,0.749711649366,0.80738177624,6.63206459054,0.0,5.19031141869,5.99769319493,1.55709342561,5.99769319493,3.97923875433,22.2288367781,4.05420991926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.94579008074],
			[1.05405405405,19.6119196119,22.9556479556,17.9313929314,24.6361746362,2.18295218295,15.7484407484,17.428967429,7.20720720721,0.0,0.0,0.0,2.18295218295,3.34372834373,1.4553014553,6.23700623701,4.7124047124,0.710325710326,5.59598059598,4.53915453915,6.58350658351,4.7124047124,0.866250866251,1.62855162855,0.0,33.8744329474,5.74324324324,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.25675675676],
			[1.36842105263,26.2258209627,25.5960413855,22.6945569051,29.1273054431,15.7444894287,6.95006747638,10.481331534,18.6459739091,0.742240215924,4.65587044534,4.04858299595,6.29779577148,0.944669365722,0.0,5.80296896086,0.202429149798,2.31668915879,5.84795321637,0.0,2.31668915879,5.98290598291,2.02429149798,6.29779577148,4.34098065677,36.1064345913,4.81781376518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18218623482],
			[1.05479452055,10.8877423946,20.0498132005,12.0441202633,18.8934353318,0.160113858744,11.8840064046,10.7276285358,8.16580679594,0.0,0.0,0.0,0.160113858744,2.06368973492,0.80056929372,4.23412204234,4.78562533357,1.76125244618,4.96352962106,0.213485144992,3.78936132361,5.4438711973,0.942892723715,1.72567158869,0.053371286248,58.331499884,6.90624444049,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.09375555951],
			[1.27118644068,19.5254237288,28.384180791,25.1073446328,22.802259887,15.6610169492,9.44632768362,3.86440677966,18.9378531073,3.02824858757,4.99435028249,1.28813559322,6.35028248588,2.57627118644,0.0,6.37288135593,0.497175141243,0.0,3.25423728814,0.0,0.610169491525,6.4406779661,1.37853107345,6.35028248588,4.76836158192,30.1258178897,5.20903954802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.79096045198],
			[0.957142857143,21.1940298507,16.4818763326,19.7014925373,17.9744136461,17.0575692964,2.64392324094,4.13646055437,13.8379530917,3.19829424307,3.71002132196,3.62473347548,6.52452025586,0.213219616205,0.0,2.43070362473,0.0,0.0,3.58208955224,0.0,0.554371002132,5.58635394456,1.32196162047,5.20255863539,1.72707889126,42.5312483712,6.23240938166,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.76759061834],
			[1.93333333333,36.2643678161,23.4482758621,28.5057471264,31.2068965517,16.6666666667,11.8390804598,19.5977011494,11.6091954023,2.12643678161,4.13793103448,3.50574712644,6.89655172414,1.6091954023,0.689655172414,5.86206896552,3.67816091954,2.24137931034,6.4367816092,4.02298850575,6.89655172414,5.28735632184,0.172413793103,5.74712643678,0.402298850575,27.0267071665,4.02873563218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.97126436782],
			[0.871794871795,27.9034690799,26.7722473605,24.2835595777,30.3921568627,15.0075414781,9.27601809955,12.8959276018,17.4962292609,3.01659125189,1.20663650075,4.44947209653,6.33484162896,0.603318250377,0.0,6.63650075415,2.03619909502,3.31825037707,6.03318250377,0.301659125189,3.24283559578,6.03318250377,4.67571644042,3.16742081448,3.61990950226,32.5969179618,4.53242835596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.46757164404],
			[2.27272727273,39.1919191919,35.8383838384,35.2323232323,39.797979798,18.4242424242,16.8080808081,20.7676767677,19.0303030303,3.71717171717,4.60606060606,3.9595959596,6.14141414141,3.71717171717,1.0101010101,6.14141414141,5.93939393939,3.79797979798,6.14141414141,5.13131313131,5.69696969697,6.14141414141,3.9595959596,5.65656565657,3.27272727273,30.6250467669,2.49696969697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.50303030303],
			[1.44444444444,31.9444444444,25.6944444444,32.8525641026,24.7863247863,18.4829059829,14.3696581197,13.4615384615,11.3247863248,4.2735042735,5.18162393162,2.77777777778,6.25,4.32692307692,0.320512820513,6.25,3.47222222222,2.5641025641,6.25,1.65598290598,2.99145299145,6.14316239316,1.33547008547,3.57905982906,0.267094017094,34.7240362735,4.23611111111,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.76388888889],
			[1.05263157895,14.9415204678,20.350877193,16.2280701754,19.0643274854,0.760233918129,15.4678362573,14.1812865497,4.88304093567,0.0,0.0,0.0,0.760233918129,2.54385964912,2.01754385965,5.9649122807,4.94152046784,0.0584795321637,4.79532163743,3.18713450292,6.14035087719,3.77192982456,0.116959064327,0.994152046784,0.0,25.7149192244,6.47076023392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.52923976608],
			[1.03125,12.9734848485,22.9403409091,18.8446969697,17.0691287879,1.75189393939,17.0928030303,11.2215909091,5.84753787879,0.0,0.0710227272727,0.0,1.68087121212,4.04829545455,1.37310606061,6.43939393939,5.23200757576,2.20170454545,5.98958333333,0.0,3.0303030303,4.49810606061,0.899621212121,0.449810606061,0.0,40.1239184729,6.40861742424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.59138257576],
			[1.41818181818,17.1095571096,29.7435897436,20.1165501166,26.7365967366,1.95804195804,18.1585081585,15.1515151515,11.5850815851,0.0,0.0,0.0,1.95804195804,4.14918414918,1.58508158508,6.5034965035,5.92074592075,0.04662004662,4.8951048951,3.68298368298,6.52680652681,6.20046620047,2.35431235431,3.0303030303,0.0,27.7534229453,5.31468531469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.68531468531],
			[1.18333333333,16.5023474178,30.2112676056,19.6478873239,27.0657276995,1.33802816901,18.3098591549,15.1643192488,11.9014084507,0.0,0.0,0.0,1.33802816901,2.86384976526,3.82629107981,6.07981220657,5.53990610329,0.211267605634,4.71830985915,3.89671361502,6.33802816901,6.2441314554,2.62910798122,3.02816901408,0.0,27.2329300178,5.32863849765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.67136150235],
			[1.75,21.0207612457,23.727137914,17.0044488384,27.7434503213,2.43450321305,14.5699456253,18.5862580326,9.15719228868,0.0,0.0,0.061789421651,2.3727137914,1.68067226891,3.42313395947,5.98121601582,3.48492338112,1.50766188828,6.3025210084,4.80721700445,5.96885813149,5.95650024716,2.59515570934,0.60553633218,0.0,35.1072095482,5.52521008403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.47478991597],
			[0.963302752294,18.0253385758,19.4145915247,17.2127566623,20.2271734382,13.7003058104,3.5124508519,4.3250327654,15.9021406728,2.83966797728,1.83486238532,2.89209261686,6.13368283093,0.384447356924,0.0,3.12800349498,0.0,0.227173438183,3.95806028834,0.0,0.139799038882,5.81039755352,1.28440366972,3.63477501092,5.17256443862,47.2253025415,6.25600698995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.74399301005],
			[1.41176470588,17.9421768707,14.6108443377,15.356142457,17.1968787515,1.96078431373,13.3953581433,15.981392557,1.21548619448,0.0,0.0,0.0,1.96078431373,1.41556622649,3.00120048019,5.90736294518,3.0712284914,2.80612244898,5.65726290516,5.90236094438,1.6156462585,1.21548619448,0.0,0.0,0.0,48.6270444942,6.74469787915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.25530212085],
			[1.23880597015,16.7820535875,11.7694659234,16.7595756159,11.791943895,5.02157885272,11.7379967632,11.7604747348,0.031469160223,0.0,0.0,0.46304621471,4.55853263801,1.78924653839,2.79176407121,5.69142240604,1.46556374753,5.42618234131,2.97158784391,3.36270454954,0.0,0.031469160223,0.0,0.0,0.0,59.0718867262,7.14484804891,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.85515195109],
			[0.888888888889,16.8367346939,19.6712018141,17.5736961451,18.9342403628,13.9739229025,3.59977324263,2.86281179138,16.0714285714,3.089569161,4.05328798186,0.878684807256,5.95238095238,0.850340136054,0.0,2.74943310658,0.0,0.0,2.77777777778,0.0,0.0850340136054,5.69727891156,0.850340136054,4.7619047619,4.7619047619,26.426072596,6.34920634921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65079365079],
			[1.225,18.9795918367,22.7551020408,18.3163265306,23.4183673469,1.12244897959,17.193877551,17.8571428571,5.5612244898,0.0,0.0,0.0,1.12244897959,1.41581632653,4.10714285714,6.1862244898,5.48469387755,1.1862244898,5.71428571429,6.02040816327,4.9362244898,4.24744897959,0.956632653061,0.357142857143,0.0,34.889422347,5.82653061224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.17346938776],
			[1.35344827586,22.4577201845,15.5611684604,18.8447177685,19.1741708763,5.05710520536,13.7876125631,17.4006149791,1.77355589721,0.0,0.24159894575,0.153744783659,4.66176147595,3.00900505161,2.62464309247,6.2101910828,1.94377333626,2.81682407204,6.14979134637,4.49703492203,3.9369646387,1.77355589721,0.0,0.0,0.0,46.9848305273,6.19811113552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.80188886448],
			[1.13888888889,21.3188798555,22.0039144836,17.7280939476,25.5947003914,14.4911171334,3.23697681421,6.82776272207,18.7669376694,2.72508280638,2.14543812105,3.34989461006,6.2707015959,0.0,0.0,3.23697681421,0.0,1.24962360735,5.32219211081,0.0,0.255947003914,6.15778380006,1.31737428485,5.67600120446,5.61577838001,47.4361111434,5.66772056609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.33227943391],
			[1.03278688525,16.1462399167,26.4376788967,18.9370283633,23.6468904502,11.5469685142,7.39005984908,4.59927140255,19.0476190476,2.84933645589,0.702576112412,1.65886026542,6.33619568046,0.878220140515,0.0,5.96539162113,0.546448087432,0.0975800156128,4.50169138694,0.0,0.0,6.03695029925,4.09185532136,2.46552172782,6.45329169919,42.0706195195,5.74160811866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.25839188134],
			[1.19191919192,23.848656052,20.8269131998,17.0775552131,27.5980140387,4.40849169663,12.6690635165,19.4401643554,8.15784968327,0.0,0.0,0.119842492724,4.2886492039,2.08868344462,3.03886320835,6.40301318267,1.13850368088,2.25988700565,6.20612908749,5.15322718713,5.82092107516,6.03492552645,1.42098955658,0.70193460024,0.0,39.6547454378,5.53244307482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.46755692518],
			[2.33333333333,33.2179930796,28.6208601087,26.1328060636,35.7060471247,15.9828637337,10.1499423299,17.2351293459,18.4709177789,2.32328225408,3.03180095568,4.20168067227,6.42609985171,0.42840665678,0.0,6.37666831438,3.34486735871,3.62497940353,6.42609985171,0.856813313561,6.32723677706,6.42609985171,2.71873455264,6.42609985171,2.89998352282,31.8366422731,3.81611468117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.18388531883],
			[2.03921568627,30.9577677225,25.9426847662,20.4374057315,36.4630467572,14.8190045249,5.61840120664,16.1387631976,20.3242835596,3.63876319759,1.16892911011,5.3544494721,4.6568627451,0.0,0.0,3.86500754148,1.75339366516,4.01583710407,6.37254901961,0.622171945701,5.12820512821,6.37254901961,4.52488687783,6.18401206637,3.24283559578,45.1245040316,4.30995475113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.69004524887],
			[2.375,37.1832358674,13.2553606238,19.363222872,31.0753736192,15.9600389864,3.40318388564,21.2231968811,9.85217673814,3.80116959064,1.55133203379,4.32910981157,6.27842755036,0.0893437296946,0.0,3.31384015595,0.0,4.60526315789,6.2865497076,4.04483430799,6.2865497076,1.7706302794,0.0,5.60428849903,2.47725795971,53.441776831,4.95614035088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.04385964912],
			[2.69811320755,28.3810529094,31.508114527,24.4887188283,35.400448608,14.4742050402,10.0145137881,13.9068478691,21.4936007389,4.24858160707,1.01596516691,3.03470114791,6.17495711835,0.699300699301,0.0,5.79232088666,3.52289220214,0.989576461275,6.17495711835,0.567357171131,6.17495711835,6.17495711835,4.38052513524,6.17495711835,4.76316136693,37.4804701694,4.01108325637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.98891674363],
			[2.22222222222,35.3703703704,31.9135802469,32.7777777778,34.5061728395,18.3950617284,14.3827160494,16.975308642,17.5308641975,4.25925925926,2.71604938272,4.93827160494,6.48148148148,1.91358024691,0.617283950617,6.48148148148,5.37037037037,1.97530864198,6.48148148148,2.03703703704,6.48148148148,6.48148148148,2.77777777778,6.48148148148,1.79012345679,28.3042836948,3.27160493827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.72839506173],
			[2.47727272727,36.0925771476,27.2727272727,27.5437864887,35.8215179316,17.4728940784,10.0708924103,18.6196830692,17.2018348624,4.0658882402,1.8140116764,5.40033361134,6.19266055046,0.479566305254,0.0,5.94245204337,3.64887406172,2.83569641368,6.19266055046,3.16930775646,6.42201834862,6.19266055046,1.95996663887,6.42201834862,2.62718932444,43.7630336935,3.66346955796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.33653044204],
			[1.18,28.1271186441,16.4237288136,18.8220338983,25.7288135593,15.8983050847,2.92372881356,12.2288135593,13.5,3.4406779661,1.19491525424,4.90677966102,6.35593220339,0.0677966101695,0.0,2.85593220339,0.0,2.0593220339,6.14406779661,0.00847457627119,4.01694915254,3.9406779661,0.0,6.35593220339,3.20338983051,39.7584037382,5.54491525424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.45508474576],
			[1.16363636364,15.4474431818,28.1036931818,17.2159090909,26.3352272727,1.46306818182,15.7528409091,13.984375,12.3508522727,0.0,0.0,0.0,1.46306818182,1.17897727273,2.96164772727,6.02982954545,5.58238636364,0.0213068181818,3.90625,3.69318181818,6.36363636364,6.13636363636,2.76988636364,3.44460227273,0.0,43.1868892849,5.64488636364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.35511363636],
			[1.83823529412,34.3529411765,25.5411764706,20.0705882353,39.8235294118,14.7058823529,5.36470588235,19.6470588235,20.1764705882,1.83529411765,3.57647058824,3.83529411765,5.45882352941,0.0,0.0,3.72941176471,1.63529411765,4.61176470588,6.2,2.43529411765,6.4,6.2,4.89411764706,6.4,2.68235294118,43.7770141401,4.01058823529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.98941176471],
			[1.27184466019,29.5560661084,11.3095679241,13.3476617505,27.5179722819,12.4509004669,0.896761283629,17.1051656414,10.4128066405,2.94226636033,0.0,5.42503520344,4.08359890313,0.0,0.0,0.896761283629,0.0,4.48380641814,6.35885273846,0.741125027792,5.52138145705,2.26784258504,0.0,5.92158897206,2.22337508338,46.1395657283,5.91343659675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.08656340325],
			[1.81818181818,25.5050505051,24.4570707071,19.2803030303,30.6818181818,5.13888888889,14.1414141414,20.3661616162,10.3156565657,0.0,0.416666666667,0.151515151515,4.57070707071,3.29545454545,0.0883838383838,5.89646464646,4.86111111111,2.38636363636,6.43939393939,5.10101010101,6.43939393939,5.37878787879,2.70202020202,2.23484848485,0.0,37.3109976598,5.00378787879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.99621212121],
			[1.66666666667,24.7666666667,24.25,16.6166666667,32.4,6.08333333333,10.5333333333,18.6833333333,13.7166666667,0.0,0.216666666667,0.783333333333,5.08333333333,3.11666666667,1.45,5.0,0.966666666667,2.7,6.25,3.76666666667,5.96666666667,6.23333333333,4.11666666667,3.31666666667,0.05,43.3912978202,5.09833333333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.90166666667],
			[1.46511627907,17.3126614987,27.5009228498,19.084533038,25.7290513104,1.5873015873,17.4972314507,15.7253599114,10.003691399,0.0,0.0,0.0,1.5873015873,3.69139904024,1.43964562569,6.49686231082,5.86932447398,0.295311923219,5.05721668512,3.87596899225,6.49686231082,6.09080841639,1.03359173127,2.87929125138,0.0,28.4369942475,5.51864156515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.48135843485],
			[1.34375,15.0981104651,31.0319767442,16.5515988372,29.5784883721,1.78052325581,14.7710755814,13.3175872093,16.2609011628,0.0,0.0,0.0,1.78052325581,2.23473837209,1.78052325581,6.2863372093,4.46947674419,0.0,4.08793604651,2.88880813953,6.34084302326,6.10465116279,4.85101744186,5.10537790698,0.199854651163,41.9660299677,5.38699127907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.61300872093],
			[2.05882352941,30.031512605,31.1869747899,25.7878151261,35.4306722689,8.04621848739,17.7415966387,21.9852941176,13.4453781513,0.0,0.514705882353,1.6281512605,5.90336134454,4.38025210084,1.9012605042,6.25,5.21008403361,4.31722689076,6.25,5.16806722689,6.25,5.84033613445,1.17647058824,6.18697478992,0.241596638655,40.9583536687,3.8781512605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.1218487395],
			[2.03174603175,30.505952381,31.4484126984,22.7306547619,39.2237103175,14.4841269841,8.24652777778,16.0218253968,23.2018849206,0.954861111111,3.86904761905,3.42261904762,6.23759920635,0.843253968254,0.0,5.81597222222,1.5873015873,3.9558531746,6.34920634921,0.0372023809524,5.67956349206,6.34920634921,5.24553571429,6.34920634921,5.25793650794,39.5180182288,3.80456349206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.19543650794],
			[1.14953271028,21.6700858597,21.312970139,15.5459311602,27.4371248385,3.00888990198,12.5370412583,18.6611959578,8.77592888078,0.0,0.0,0.0,3.00888990198,1.60322163969,3.09247017704,6.13935111314,1.70199832839,1.1473292303,6.13935111314,5.44791429223,5.92660132209,6.08616366537,1.8007750171,0.888990198313,0.0,49.324337459,5.70169440012,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.29830559988],
			[1.83823529412,29.0235294118,28.9411764706,21.4588235294,36.5058823529,6.47058823529,14.9882352941,22.5529411765,13.9529411765,0.0,0.352941176471,0.823529411765,5.29411764706,3.36470588235,2.8,6.03529411765,2.78823529412,4.35294117647,6.2,5.6,6.4,6.08235294118,3.49411764706,4.37647058824,0.0,44.6570906476,4.20352941176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.79647058824],
			[1.33333333333,24.2798353909,31.8930041152,25.0,31.1728395062,13.1687242798,11.8312757202,11.1111111111,20.0617283951,2.67489711934,0.411522633745,3.60082304527,6.48148148148,0.617283950617,0.0,6.48148148148,4.73251028807,1.33744855967,6.48148148148,0.0,3.29218106996,6.48148148148,4.8353909465,5.86419753086,2.88065843621,36.9249844613,4.38271604938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.61728395062],
			[0.89552238806,21.4179104478,27.4875621891,21.3184079602,27.5870646766,12.8358208955,8.48258706468,8.58208955224,19.0049751244,3.65671641791,1.09452736318,1.74129353234,6.34328358209,1.01990049751,0.0,6.3184079602,1.14427860697,0.422885572139,6.26865671642,0.0,1.89054726368,6.34328358209,3.18407960199,4.85074626866,4.62686567164,34.1198817692,5.10945273632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.89054726368],
			[1.5,31.7271352986,16.0336356765,21.4663643235,26.2944066515,10.4497354497,11.0166288738,21.2773998488,5.01700680272,0.0,0.727513227513,3.37301587302,6.34920634921,1.93688586546,3.15570672714,5.57445200302,0.349584278156,4.99811035525,6.08465608466,6.04686318972,4.1477702192,4.53514739229,0.481859410431,0.0,0.0,47.6432319945,5.22392290249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.77607709751],
			[1.23287671233,13.5616438356,16.8645357686,12.5114155251,17.9147640791,0.0,12.5114155251,13.5616438356,4.35312024353,0.0,0.0,0.0,0.0,0.0152207001522,3.02891933029,3.71385083714,5.75342465753,0.243531202435,4.1400304414,5.03805175038,4.1400304414,3.88127853881,0.350076103501,0.121765601218,0.0,45.9318220387,6.95738203957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.04261796043],
			[1.05194805195,10.6782106782,22.5268558602,16.4021164021,16.8029501363,9.60397627064,6.79814013147,1.07423440757,15.7287157287,2.48516915184,1.4911014911,0.416867083534,5.21083854417,0.256533589867,0.0,5.88423921757,0.657367324034,0.0,1.07423440757,0.0,0.0,5.72390572391,2.46913580247,2.1645021645,5.37117203784,42.7072847265,6.67949334616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.32050665384],
			[1.32098765432,20.5953617169,16.1070728049,13.5802469136,23.1221876082,3.87677397023,9.70347294335,16.7185877466,6.40359986154,0.0,0.0,0.0230760355371,3.85369793469,0.599976923964,2.79220029999,5.88438906196,0.426906657436,3.41525325949,6.23052959502,5.00749971155,2.06530518057,5.57286258221,0.703819083881,0.126918195454,0.0,49.0527349593,6.32975654783,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.67024345217],
			[1.40740740741,28.0701754386,20.1754385965,16.6666666667,31.5789473684,12.962962963,3.7037037037,15.1072124756,16.4717348928,0.292397660819,4.1910331384,1.94931773879,6.53021442495,0.0,0.0,3.21637426901,0.487329434698,1.36452241715,6.14035087719,1.94931773879,5.6530214425,6.14035087719,5.55555555556,3.60623781676,1.16959064327,30.756649825,5.17543859649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.82456140351],
			[1.54166666667,36.8243243243,22.0720720721,17.2297297297,41.6666666667,13.963963964,3.26576576577,22.8603603604,18.8063063063,0.112612612613,3.49099099099,4.61711711712,5.74324324324,0.0,0.0,3.15315315315,0.112612612613,5.29279279279,6.08108108108,4.84234234234,6.64414414414,6.08108108108,5.06756756757,5.85585585586,1.8018018018,31.2171623462,4.11036036036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88963963964],
			[1.52272727273,35.6512890095,20.1153324288,18.8263229308,36.9402985075,14.3826322931,4.44369063772,21.2686567164,15.671641791,1.66214382632,2.98507462687,4.13839891452,5.59701492537,0.0,0.0,3.3921302578,1.05156037992,5.32564450475,6.34328358209,3.49389416554,6.10583446404,6.34328358209,3.56173677069,5.39348710991,0.373134328358,40.8330819773,4.42333785617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.57666214383],
			[1.56060606061,31.6416593116,22.6978523095,17.2844954398,37.0550161812,13.3862900853,3.89820535452,18.2553692262,18.799646955,4.33951162107,0.132391879965,5.16328331862,3.75110326567,0.0,0.0,2.95675198588,0.941453368638,5.39864666078,6.50191232716,1.3680494263,4.986760812,6.11944689615,3.28037658135,5.26625478082,4.13356869668,43.6526146851,4.56604883789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.43395116211],
			[2.02777777778,27.5114155251,17.1232876712,20.7762557078,23.8584474886,10.0837138508,10.6925418569,17.4277016743,6.43074581431,0.0,3.50076103501,0.608828006088,5.97412480974,1.10350076104,0.0,5.97412480974,3.61491628615,4.1095890411,6.16438356164,4.64231354642,2.51141552511,4.90867579909,1.52207001522,0.0,0.0,28.5781038128,5.53652968037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.46347031963],
			[2.47058823529,37.5350140056,23.6694677871,23.0042016807,38.200280112,17.0868347339,5.91736694678,20.4481792717,17.7521008403,4.02661064426,2.55602240896,4.7619047619,5.74229691877,0.0,0.0,4.30672268908,1.6106442577,4.23669467787,6.61764705882,3.64145658263,5.95238095238,5.88235294118,5.42717086835,4.7268907563,1.71568627451,47.8340328154,3.87955182073,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.12044817927],
			[1.89583333333,34.3864468864,19.2078754579,16.9184981685,36.6758241758,14.4917582418,2.42673992674,19.8946886447,16.7811355311,3.41117216117,1.71703296703,5.42582417582,3.93772893773,0.0,0.0,2.42673992674,0.0,5.08241758242,6.31868131868,2.47252747253,6.02106227106,6.29578754579,4.0521978022,5.28846153846,1.14468864469,42.259525561,4.64056776557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.35943223443],
			[1.0,17.4579985391,24.6165084003,21.1102994887,20.9642074507,4.60189919649,16.5084002922,12.8560993426,8.10810810811,0.0,0.73046018992,0.0,3.87143900657,4.60189919649,0.803506208912,5.91672753835,5.18626734843,1.46092037984,5.84368151936,3.94448502557,1.60701241782,4.67494521549,3.43316289262,0.0,0.0,26.7754761286,5.79254930606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.20745069394],
			[1.04918032787,15.0358606557,29.1495901639,28.125,16.0604508197,13.1659836066,14.9590163934,1.86987704918,14.1905737705,3.66290983607,1.89549180328,1.5625,6.04508196721,4.6106557377,0.435450819672,6.14754098361,3.76536885246,0.0,1.86987704918,0.0,0.0,5.48155737705,6.3268442623,0.15368852459,2.22848360656,35.416709069,5.58145491803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.41854508197],
			[0.977272727273,24.960359408,23.1897463002,17.560782241,30.5893234672,5.31183932347,12.2489429175,19.6485200846,10.9408033827,0.0,0.184989429175,0.277484143763,4.84936575053,2.74841437632,3.60729386892,5.61575052854,0.277484143763,2.8144820296,6.10465116279,4.86257928118,5.86680761099,6.09143763214,1.30813953488,3.22410147992,0.317124735729,46.2682151988,5.18498942918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.81501057082],
			[1.35185185185,19.4063926941,15.5251141553,16.4383561644,18.4931506849,14.6372399797,1.80111618468,4.76915271436,13.7239979706,3.37392186707,1.72501268392,3.22171486555,6.31659056317,0.0,0.0,1.80111618468,0.0,0.025367833587,4.26179604262,0.0,0.481988838153,4.6930492136,0.076103500761,5.68239472349,3.27245053272,32.8310039246,6.50684931507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.49315068493],
			[1.39622641509,16.445690974,28.3273839878,15.0688424273,29.7042325344,1.07088220296,13.9979602244,15.374808771,14.3294237634,0.0,0.0,0.0,1.07088220296,1.17287098419,2.95767465579,5.73686894442,4.13054563998,0.356960734319,4.97195308516,4.51300356961,5.53289138195,5.96634370219,5.30341662417,2.57521672616,0.484446710862,33.4076442527,5.52269250382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.47730749618],
			[0.873684210526,11.1223842739,23.0057070387,20.7863031072,13.3417882055,10.8941027267,9.89220038047,0.228281547242,13.1135066582,3.20862396956,2.675967026,0.253646163602,4.75586556753,3.1832593532,0.0,6.21433100824,0.494610019023,0.0,0.228281547242,0.0,0.0,4.18516169943,4.00760938491,0.304375396322,4.61636017755,47.4934738815,6.58719086874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.41280913126],
			[2.08333333333,17.3541666667,34.9791666667,26.0625,26.2708333333,9.375,16.6875,7.97916666667,18.2916666667,0.0,0.145833333333,3.9375,5.29166666667,5.45833333333,0.645833333333,6.25,4.33333333333,1.9375,5.5,0.0,0.541666666667,6.25,2.875,5.6875,3.47916666667,35.2501601906,4.76666666667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.23333333333],
			[1.42,30.9577464789,19.8309859155,15.4647887324,35.323943662,11.1549295775,4.30985915493,19.8028169014,15.5211267606,0.0,2.9014084507,1.88732394366,6.3661971831,1.60563380282,0.0,2.45070422535,0.253521126761,4.11267605634,6.59154929577,3.0985915493,6.0,6.08450704225,4.92957746479,4.14084507042,0.366197183099,28.0846901842,4.92112676056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.07887323944],
			[1.41666666667,31.1274509804,28.5539215686,21.9362745098,37.7450980392,13.4803921569,8.45588235294,17.6470588235,20.0980392157,0.0,3.1862745098,3.79901960784,6.49509803922,1.5931372549,0.0,6.00490196078,0.857843137255,5.39215686275,5.88235294118,0.980392156863,5.39215686275,5.88235294118,2.20588235294,6.61764705882,5.39215686275,20.7960813819,4.0318627451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.9681372549],
			[1.73913043478,32.3913043478,19.7826086957,18.9130434783,33.2608695652,15.2173913043,3.69565217391,17.1739130435,16.0869565217,0.869565217391,4.45652173913,3.36956521739,6.52173913043,0.0,0.0,3.15217391304,0.54347826087,3.91304347826,6.52173913043,2.17391304348,4.5652173913,6.52173913043,5.65217391304,3.47826086957,0.434782608696,30.3825754548,4.78260869565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.21739130435],
			[1.75675675676,18.41995842,38.0041580042,29.5218295218,26.9022869023,10.1455301455,19.3762993763,8.27442827443,18.6278586279,0.0,0.0,5.19750519751,4.94802494802,2.66112266112,5.15592515593,5.57172557173,5.98752598753,2.2869022869,5.61330561331,0.0,0.37422037422,5.98752598753,5.32224532225,4.24116424116,3.07692307692,27.5772794014,4.35758835759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.64241164241],
			[1.72727272727,23.4748803828,23.0562200957,24.1028708134,22.4282296651,12.8588516746,11.2440191388,10.6160287081,11.8122009569,0.269138755981,4.63516746411,1.70454545455,6.25,0.0,0.0,5.59210526316,5.6519138756,2.42224880383,5.86124401914,0.0,2.33253588517,6.25,2.78110047847,2.72129186603,0.0598086124402,30.3068207265,5.34688995215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.65311004785],
			[2.0,21.7163085938,25.8056640625,22.2412109375,25.2807617188,15.3564453125,6.884765625,6.35986328125,18.9208984375,0.23193359375,3.5888671875,5.33447265625,6.201171875,1.513671875,0.0,5.3466796875,0.0244140625,1.1962890625,4.96826171875,0.0,0.1953125,6.23779296875,2.880859375,4.6875,5.11474609375,50.9545200373,5.24780273438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.75219726563],
			[1.87878787879,29.4110459433,22.4706744868,25.3299120235,26.5518084066,12.0478983382,13.2820136852,17.3631476051,9.18866080156,0.403225806452,4.50879765396,0.696480938416,6.43939393939,0.989736070381,0.904203323558,6.06060606061,5.32746823069,0.244379276637,5.99951124145,4.67986314761,6.43939393939,5.57184750733,1.380742913,2.23607038123,0.0,54.6069048973,4.81182795699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18817204301],
			[2.1724137931,20.8128078818,31.0344827586,25.0136836344,26.833607006,13.6288998358,11.3847837986,7.18390804598,19.64969896,0.410509031199,2.09359605911,5.18609742748,5.93869731801,3.25670498084,0.0,6.13026819923,1.9978106185,1.1767925561,5.62397372742,0.0,0.383141762452,5.93869731801,2.47673782157,5.29556650246,5.93869731801,44.029661067,4.81527093596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18472906404],
			[1.93846153846,31.4896214896,21.6483516484,23.5653235653,29.5726495726,11.9658119658,11.5995115995,19.5238095238,10.0488400488,0.0,3.95604395604,1.86813186813,6.14163614164,0.854700854701,0.0,5.53113553114,5.21367521368,2.49084249084,6.05616605617,4.81074481074,6.16605616606,5.95848595849,2.33211233211,1.75824175824,0.0,44.1717491016,4.6862026862,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.3137973138],
			[1.10638297872,29.6644844517,34.9018003273,38.1342062193,26.4320785597,19.271685761,18.8625204583,10.3927986907,16.0392798691,3.60065466448,5.36006546645,4.00981996727,6.30114566285,3.15057283142,3.35515548282,6.34206219313,6.0147299509,1.26841243863,6.3829787234,0.122749590835,2.61865793781,6.3829787234,3.35515548282,5.31914893617,0.981996726678,20.3030574342,3.54337152209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.45662847791],
			[1.10869565217,28.6018755328,34.6973572038,30.4347826087,32.8644501279,13.9386189258,16.4961636829,14.663256607,18.2011935209,0.852514919011,4.68883205456,2.30179028133,6.09548167093,4.09207161125,0.596760443308,6.09548167093,5.71184995737,4.81670929241,5.49872122762,1.02301790281,3.32480818414,6.09548167093,5.88235294118,5.15771526002,1.06564364876,33.2314469272,3.67007672634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.32992327366],
			[0.791666666667,43.4210526316,35.5263157895,36.1842105263,42.7631578947,20.1754385965,16.0087719298,23.2456140351,19.5175438596,2.85087719298,4.38596491228,6.35964912281,6.57894736842,5.04385964912,0.877192982456,6.57894736842,3.50877192982,5.70175438596,6.57894736842,4.38596491228,6.57894736842,6.57894736842,5.70175438596,5.92105263158,1.31578947368,13.3888222795,2.10526315789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.89473684211],
			[1.28571428571,31.569664903,40.0352733686,33.8624338624,37.7425044092,16.049382716,17.8130511464,15.5202821869,22.2222222222,0.705467372134,4.05643738977,5.11463844797,6.17283950617,4.05643738977,1.0582010582,6.17283950617,6.52557319224,3.52733686067,6.17283950617,1.0582010582,4.7619047619,6.17283950617,6.17283950617,5.99647266314,3.88007054674,19.1959894434,2.83950617284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16049382716],
			[0.925,33.8513513514,37.8378378378,34.6621621622,37.027027027,16.4864864865,18.1756756757,17.3648648649,19.6621621622,0.675675675676,4.72972972973,5.0,6.08108108108,4.59459459459,1.55405405405,6.08108108108,5.94594594595,4.72972972973,6.08108108108,1.14864864865,5.40540540541,6.08108108108,5.47297297297,5.0,3.10810810811,25.0621638515,2.83108108108,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16891891892],
			[0.974358974359,41.2955465587,33.1983805668,33.3333333333,41.1605937922,20.8502024291,12.4831309042,20.4453441296,20.7152496626,3.64372469636,4.72334682861,5.7354925776,6.74763832659,1.82186234818,0.0,6.74763832659,3.91363022942,4.38596491228,6.07287449393,3.44129554656,6.54520917679,6.07287449393,4.99325236167,6.41025641026,3.23886639676,27.9460263625,2.55060728745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.44939271255],
			[0.819672131148,34.6229508197,39.7049180328,37.3442622951,36.9836065574,16.3606557377,20.9836065574,18.262295082,18.7213114754,0.885245901639,3.83606557377,5.24590163934,6.39344262295,5.40983606557,3.47540983607,6.26229508197,5.83606557377,5.5737704918,5.90163934426,2.39344262295,4.39344262295,5.90163934426,4.88524590164,4.85245901639,3.08196721311,24.7902301462,2.56721311475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.43278688525],
			[1.0,34.2449464923,34.5719381688,38.5850178359,30.2318668252,18.6385255648,19.9464922711,15.6064209275,14.6254458977,2.19976218787,4.66706302021,5.08323424495,6.68846611177,4.99405469679,3.53745541023,6.24256837099,5.1724137931,2.91319857313,6.24256837099,0.862068965517,5.58858501784,5.82639714625,2.85374554102,5.20214030916,0.743162901308,32.0107661517,3.11831153389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.88168846611],
			[0.84126984127,30.5480682839,31.9257262653,29.200359389,33.2734351602,11.4106019766,17.7897574124,19.1374663073,14.1359688529,0.239592692423,2.72536687631,2.21623240491,6.22941000299,4.16292303085,4.34261755016,6.22941000299,3.05480682839,4.49236298293,6.22941000299,3.98322851153,4.43246480982,6.22941000299,2.24618149146,3.6238394729,2.03653788559,29.724359011,3.75262054507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.24737945493],
			[1.03448275862,31.4655172414,28.0747126437,27.2988505747,32.2413793103,17.5862068966,9.71264367816,13.8793103448,18.3620689655,1.52298850575,4.71264367816,4.88505747126,6.46551724138,1.00574712644,0.0,5.45977011494,3.24712643678,1.81034482759,6.46551724138,0.14367816092,5.45977011494,6.03448275862,5.80459770115,4.42528735632,2.09770114943,30.0294592914,4.04597701149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.95402298851],
			[1.26,32.7619047619,32.3174603175,27.5873015873,37.4920634921,10.8571428571,16.7301587302,21.9047619048,15.5873015873,0.0634920634921,0.888888888889,3.33333333333,6.57142857143,4.47619047619,1.84126984127,6.09523809524,4.31746031746,4.85714285714,6.60317460317,4.12698412698,6.31746031746,6.06349206349,5.2380952381,3.90476190476,0.380952380952,42.2533413447,3.49206349206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.50793650794],
			[1.43636363636,24.6720368239,27.1576524741,20.0230149597,31.8066743383,12.4050632911,7.61795166858,12.2669735328,19.5397008055,0.0,2.04833141542,3.91254315305,6.44418872267,1.81818181818,0.0,5.13233601841,0.667433831991,3.31415420023,6.44418872267,0.0230149597238,2.48561565017,6.44418872267,3.06098964327,6.02991944764,4.00460299194,44.6950469406,4.8170310702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.1829689298],
			[1.47619047619,34.1013824885,38.0952380952,37.019969278,35.1766513057,18.1259600614,18.8940092166,15.975422427,19.2012288786,0.921658986175,5.06912442396,5.99078341014,6.14439324117,3.99385560676,2.15053763441,6.14439324117,6.60522273425,3.99385560676,6.14439324117,0.768049155146,5.06912442396,6.14439324117,6.75883256528,4.91551459293,1.38248847926,26.569317035,2.78033794163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.21966205837],
			[1.56,27.4871794872,41.2307692308,32.2051282051,36.5128205128,12.0,20.2051282051,15.4871794872,21.0256410256,0.0,1.53846153846,4.30769230769,6.15384615385,2.25641025641,5.53846153846,6.15384615385,6.25641025641,4.92307692308,6.15384615385,0.615384615385,3.79487179487,6.15384615385,5.64102564103,5.53846153846,3.69230769231,27.9535422524,3.12820512821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.87179487179],
			[1.55882352941,39.1786903441,29.9112097669,36.0710321865,33.0188679245,20.1442841287,15.9267480577,19.0344062153,13.9844617092,2.88568257492,5.60488346282,5.16093229745,6.49278579356,3.21864594895,1.27635960044,5.77136514983,5.66037735849,4.38401775805,6.49278579356,1.99778024417,6.15982241953,5.77136514983,3.94006659267,3.99556048835,0.277469478357,31.5759305213,3.0910099889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.9089900111],
			[1.26829268293,33.1613508443,35.1313320826,32.2701688555,36.0225140713,14.4934333959,17.7767354597,18.6679174484,17.3545966229,0.515947467167,2.25140712946,5.62851782364,6.09756097561,4.08067542214,2.81425891182,6.09756097561,4.78424015009,5.20637898687,6.09756097561,1.96998123827,5.39399624765,6.09756097561,5.15947467167,5.11257035647,0.984990619137,41.0210205293,3.17073170732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.82926829268],
			[0.588235294118,27.2470588235,33.1058823529,29.9294117647,30.4235294118,15.2,14.7294117647,12.0470588235,18.3764705882,0.0705882352941,4.63529411765,4.28235294118,6.21176470588,4.30588235294,0.4,5.97647058824,4.04705882353,1.78823529412,5.92941176471,0.258823529412,4.07058823529,5.92941176471,4.23529411765,4.91764705882,3.29411764706,36.1452027841,3.96470588235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.03529411765],
			[1.55555555556,31.0626102293,33.1128747795,27.4470899471,36.7283950617,11.4858906526,15.9611992945,19.5767195767,17.151675485,0.0,0.352733686067,4.67372134039,6.4594356261,1.71957671958,3.52733686067,6.01851851852,4.69576719577,5.46737213404,6.48148148148,2.31481481481,5.31305114638,6.01851851852,4.7619047619,5.04850088183,1.32275132275,35.415255518,3.58245149912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.41754850088],
			[0.72602739726,29.749289222,39.4158697338,35.4355130525,33.7296459033,16.7743602998,18.6611527526,12.9749289222,20.7547169811,0.491082967175,4.91082967175,5.32437322306,6.04807443784,5.55699147066,2.37787542001,6.04807443784,4.67821142414,2.97234427501,6.04807443784,0.930472990437,3.02403721892,6.04807443784,5.53114499871,4.88498319979,4.29051434479,43.129942549,3.08348410442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.91651589558],
			[1.2,35.3443526171,33.8842975207,33.5261707989,35.7024793388,15.1515151515,18.3746556474,20.1928374656,15.5096418733,0.633608815427,2.83746556474,5.12396694215,6.5564738292,3.93939393939,2.01101928375,6.5564738292,5.86776859504,5.45454545455,6.17079889807,2.97520661157,5.59228650138,6.14325068871,4.49035812672,4.51790633609,0.358126721763,31.4002245245,3.07713498623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.92286501377],
			[1.60869565217,16.2423292858,24.4548896723,16.7123645385,23.9848544196,10.9413761588,5.77098837968,5.30095312704,18.6839012926,3.09439874657,1.46233189711,0.48309178744,5.90155372764,0.0,0.0,4.15197806502,1.61901031466,0.443922183053,4.84397440919,0.0,0.0130565347957,6.21491056274,4.08669539104,2.7027027027,5.67959263611,50.3699594846,5.93027810419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.06972189581],
			[1.02542372881,15.4993696596,17.1592660036,14.8830368399,17.7755988234,2.0030816641,12.8799551758,13.4962879955,4.27931082785,0.0,0.0490264742961,0.0,1.9540551898,1.61086986973,2.37428211234,6.0932903768,2.80151281692,0.0420226922538,4.42639025074,3.48087967502,5.5469953775,3.95013307186,0.0210113461269,0.308166409861,0.0,43.6300868504,6.73413643367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26586356633],
			[1.43181818182,19.9134199134,21.645021645,16.4502164502,25.1082251082,3.28282828283,13.1673881674,16.6305916306,8.47763347763,0.0,0.0,0.0,3.28282828283,0.396825396825,3.96825396825,6.16883116883,2.63347763348,0.505050505051,6.34920634921,3.42712842713,6.34920634921,5.37518037518,0.21645021645,2.886002886,0.0,34.0305189731,5.84415584416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.15584415584],
			[0.911764705882,31.4041745731,21.3472485769,27.5142314991,25.2371916509,12.5237191651,14.990512334,18.880455408,6.35673624288,0.0,2.08728652751,3.60531309298,6.83111954459,0.853889943074,4.64895635674,6.07210626186,3.4155597723,5.59772296015,6.83111954459,1.04364326376,5.40796963947,5.0284629981,0.189753320683,1.1385199241,0.0,25.79486632,4.72485768501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.27514231499],
			[1.3137254902,23.5879426397,28.5923324554,21.0711150132,31.1091600819,13.2572431958,7.81387181738,10.330699444,20.778460638,3.62891425227,1.2876792508,2.01931518876,6.32133450395,0.0,0.0,4.97512437811,2.83874743927,1.49253731343,6.46766169154,0.0,2.37050043898,6.46766169154,5.1214515657,5.70676031607,3.48258706468,39.0903929707,4.78197249049,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.21802750951],
			[1.38636363636,17.0640834575,29.9087183308,19.9515648286,27.0212369598,11.3450074516,8.60655737705,5.71907600596,21.3021609538,2.84090909091,2.2913561848,0.0931445603577,6.1195976155,0.0558867362146,0.0,6.18479880775,2.36587183308,0.652011922504,5.00186289121,0.0,0.0652011922504,6.14754098361,4.4802533532,5.11363636364,5.56073025335,42.7156403373,5.30271982116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.69728017884],
			[1.25806451613,17.1307784211,31.5595993015,21.6983733113,26.9920044114,12.0209539564,9.67741935484,5.10982446466,21.8821799467,3.00523848911,2.90414483963,0.0735226541678,6.03804797353,0.523848910946,0.0,6.12995129124,3.02361915265,0.119474313023,4.95358882456,0.0,0.0367613270839,6.12995129124,4.9076371657,4.79735318445,6.0472383053,42.865296668,5.13096222774,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.86903777226],
			[1.19480519481,17.8712591756,13.9751552795,13.3963862225,18.4500282326,12.5635234331,0.832862789385,5.30773574252,13.1422924901,2.03274985884,1.1434217956,3.58554488989,5.80180688876,0.0,0.0,0.832862789385,0.0,1.39751552795,3.91022021457,0.0,0.0,5.19480519481,1.36928289102,2.6397515528,3.9384528515,42.5746442072,6.81535855449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.18464144551],
			[0.904761904762,19.0006265664,12.969924812,14.4580200501,17.5125313283,4.43295739348,10.0250626566,14.5676691729,2.94486215539,0.0,0.0,0.0,4.43295739348,0.46992481203,2.63157894737,6.06203007519,0.861528822055,0.673558897243,6.2343358396,3.1954887218,4.46428571429,2.81954887218,0.0,0.125313283208,0.0,38.5559037416,6.80294486216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.19705513784],
			[1.61538461538,16.336996337,21.9926739927,14.1684981685,24.1611721612,10.2857142857,3.88278388278,6.05128205128,18.1098901099,3.25274725275,1.0695970696,0.791208791209,5.17216117216,0.0,0.0,3.48717948718,0.395604395604,0.703296703297,5.33333333333,0.0,0.014652014652,6.09523809524,4.05860805861,2.31501831502,5.64102564103,49.9516729334,6.16703296703,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.83296703297],
			[2.04166666667,22.7465986395,31.0799319728,17.3681972789,36.4583333333,3.33758503401,14.0306122449,19.4090136054,17.0493197279,0.0,0.0,0.829081632653,2.50850340136,0.552721088435,4.99574829932,4.18792517007,4.29421768707,4.78316326531,6.05867346939,2.48724489796,6.07993197279,6.12244897959,2.76360544218,5.61224489796,2.55102040816,43.0560618093,4.61734693878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.38265306122],
			[1.81944444444,20.8227311281,28.7531806616,22.3070398643,27.2688719254,4.98303647159,17.3240033927,15.8396946565,11.4291772689,0.0,0.190839694656,0.0,4.79219677693,1.78117048346,4.14546225615,6.29770992366,5.09966072943,0.180237489398,5.19508057676,4.16666666667,6.29770992366,6.22349448685,1.3358778626,3.86980491942,0.0,50.8826811018,5.04240882103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.95759117897],
			[2.33333333333,23.5155790711,37.6837154615,18.9300411523,42.2692533804,4.05643738977,14.8736037625,19.4591416814,22.810111699,0.0,0.0,0.881834215168,3.1746031746,4.40917107584,2.1164021164,5.23221634333,3.11581422693,4.87948265726,6.58436213992,1.41093474427,6.58436213992,6.58436213992,4.2328042328,6.58436213992,5.40858318636,37.1895304647,3.88007054674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.11992945326],
			[1.13043478261,26.254180602,44.1471571906,33.110367893,37.2909698997,11.7056856187,21.4046822742,14.5484949833,22.7424749164,0.0,2.00668896321,2.67558528428,7.02341137124,5.35117056856,2.50836120401,7.02341137124,6.52173913043,4.18060200669,6.02006688963,0.836120401338,3.51170568562,6.02006688963,6.02006688963,6.35451505017,4.34782608696,16.2118948132,2.95986622074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.04013377926],
			[1.29268292683,26.0929590428,37.873907041,25.8168430741,38.1500230097,9.38794293603,16.4289001381,16.7050161068,21.4450069029,0.0,0.0,4.1417395306,5.24620340543,4.60193281178,1.24252185918,5.98251265532,4.60193281178,4.87804878049,5.98251265532,0.552231937414,5.29222273355,5.98251265532,5.56833870225,6.07455131155,3.81960423378,32.5899306889,3.60331339162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.39668660838],
			[1.60526315789,17.7739430544,31.6652286454,15.9188955997,33.5202761001,2.4374460742,13.4814495255,15.3364969802,18.1837791199,0.0,0.0,0.0,2.4374460742,0.0,3.58067299396,4.22778257118,5.67299396031,0.0215703192407,5.72691975841,4.0767903365,5.51121656601,6.14754098361,5.69456427955,4.7670405522,1.57463330457,50.4825197588,5.05608283003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.94391716997],
			[1.51898734177,21.2025316456,32.0675105485,17.447257384,35.8227848101,3.05907172996,14.388185654,18.1434599156,17.6793248945,0.0,0.0,0.274261603376,2.78481012658,0.200421940928,4.2194092827,4.51476793249,5.45358649789,1.31856540084,6.32911392405,4.44092827004,6.05485232068,6.32911392405,5.72784810127,4.39873417722,1.22362869198,46.9487221511,4.67299578059,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.32700421941],
			[1.75,21.2522045855,31.6137566138,24.7795414462,28.0864197531,10.3615520282,14.417989418,10.8906525573,17.1957671958,0.220458553792,0.26455026455,4.14462081129,5.73192239859,1.36684303351,2.6455026455,5.37918871252,5.02645502646,0.617283950617,5.99647266314,0.132275132275,4.14462081129,6.34920634921,4.49735449735,4.93827160494,1.41093474427,33.161532449,4.71340388007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.28659611993],
			[2.66666666667,23.6689814815,35.8796296296,22.1354166667,37.4131944444,7.52314814815,14.6122685185,16.1458333333,21.2673611111,0.0,0.0,2.5462962963,4.97685185185,0.810185185185,3.99305555556,5.15046296296,4.65856481481,4.31134259259,6.25,0.405092592593,5.17939814815,6.25,3.64583333333,6.10532407407,5.2662037037,51.9548302868,4.04513888889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.95486111111],
			[1.61538461538,24.358974359,26.4194139194,16.9871794872,33.7912087912,5.12820512821,11.858974359,19.2307692308,14.5604395604,0.0,0.0,1.90018315018,3.22802197802,4.4184981685,0.755494505495,5.67765567766,1.00732600733,5.31135531136,6.25,1.78571428571,5.8836996337,6.25,0.641025641026,5.86080586081,1.80860805861,38.6690892283,4.92216117216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.07783882784],
			[1.63291139241,26.4350897851,17.015013247,16.3477578255,27.1023452066,14.8954960259,1.45226179963,11.5395937592,15.5627514474,2.32558139535,1.72701403199,4.69041310961,6.15248748896,0.0,0.0,1.45226179963,0.0,3.28721420862,6.21136296732,0.0,2.04101658326,5.0142282406,0.166813855363,6.47630261996,3.90540673143,40.183880797,5.65498969679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.34501030321],
			[1.41379310345,16.2414727596,15.7181571816,8.82160545743,23.1380244837,7.95252780114,0.869077656294,8.28894495842,14.8490795253,1.75684515466,0.766283524904,0.691524156621,4.73787496496,0.0,0.0,0.869077656294,0.0,1.58863657602,6.32651154098,0.0,0.373796841417,5.00887767498,0.55135034109,4.54163162321,4.74721988599,50.3712336844,6.80403700589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.19596299411],
			[0.901098901099,25.1273117127,19.2173679979,19.9812382739,24.3634414366,7.20986330742,12.7713749665,17.9174484053,6.44599303136,0.0,0.871080139373,0.495845617797,5.84293755025,1.07209863307,3.06888233718,6.47279549719,2.15759849906,4.36880192978,6.16456714018,4.16778343608,3.21629589922,5.52130796033,0.50924685071,0.415438220316,0.0,35.2678035058,5.56553202895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.43446797105],
			[1.57142857143,25.3246753247,16.1255411255,14.898989899,26.5512265512,14.0331890332,0.865800865801,11.2914862915,15.2597402597,2.05627705628,1.8759018759,4.36507936508,5.73593073593,0.0,0.0,0.865800865801,0.0,2.77777777778,6.31313131313,0.0,2.20057720058,4.9062049062,0.2886002886,6.13275613276,3.93217893218,30.7036690261,5.85497835498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.14502164502],
			[1.33333333333,37.5,15.5833333333,28.25,24.8333333333,15.5,12.75,22.0,2.83333333333,2.0,2.25,4.83333333333,6.41666666667,2.0,4.0,5.58333333333,1.16666666667,5.33333333333,6.66666666667,5.33333333333,4.66666666667,2.83333333333,0.0,0.0,0.0,35.9519448628,4.69166666667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.30833333333],
			[1.43137254902,28.7402632286,20.8702659146,23.4756916465,26.1348374966,8.72951920494,14.7461724416,20.0107440236,6.12409347301,0.0,1.07440236369,1.3698630137,6.28525382756,0.940102068225,3.89470856836,6.28525382756,3.62610797744,4.1095890411,6.28525382756,4.24388933656,5.37201181843,5.37201181843,0.644641418211,0.107440236369,0.0,32.0069144689,5.03894708568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.96105291432],
			[1.17857142857,20.8633958634,25.2886002886,16.8951418951,29.2568542569,11.5680615681,5.32708032708,9.29533429533,19.9615199615,3.39105339105,2.71765271765,0.252525252525,5.20683020683,0.12025012025,0.0,4.9543049543,0.252525252525,0.805675805676,6.31313131313,0.012025012025,2.1645021645,6.31313131313,3.49927849928,5.72390572391,4.4252044252,47.2139699635,5.3848003848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6151996152],
			[1.51515151515,29.2121212121,28.6666666667,21.2272727273,36.6515151515,13.0757575758,8.15151515152,16.1363636364,20.5151515152,2.68181818182,3.95454545455,1.0303030303,5.40909090909,0.636363636364,0.0,5.84848484848,1.66666666667,4.63636363636,6.15151515152,0.560606060606,4.78787878788,5.92424242424,4.90909090909,5.86363636364,3.81818181818,41.2287260303,4.21212121212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.78787878788],
			[1.24615384615,19.2782526116,13.5232668566,17.1130104463,15.6885090218,4.93827160494,12.1747388414,14.3399810066,1.34852801519,0.0,1.06362773029,0.0,3.87464387464,3.83665716999,2.24121557455,5.60303893637,0.493827160494,1.17758784425,5.69800569801,5.29914529915,2.16524216524,1.34852801519,0.0,0.0,0.0,43.9486760421,6.71984805318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.28015194682],
			[1.40625,23.3680555556,12.5694444444,13.2638888889,22.6736111111,13.1597222222,0.104166666667,10.2083333333,12.4652777778,3.05555555556,0.190972222222,5.43402777778,4.47916666667,0.0,0.0,0.104166666667,0.0,3.14236111111,6.00694444444,0.0,1.05902777778,3.50694444444,0.0347222222222,5.0,3.92361111111,39.768660265,6.40625,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.59375],
			[1.08974358974,22.6395173454,12.6395173454,19.0799396682,16.1990950226,7.33031674208,11.7496229261,15.3092006033,0.889894419306,0.0,2.0814479638,0.0,5.24886877828,2.11161387632,2.95625942685,5.52036199095,1.16138763198,3.33333333333,5.73152337858,4.73604826546,1.50829562594,0.889894419306,0.0,0.0,0.0,40.9560988609,6.47209653092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.52790346908],
			[1.15596330275,17.9117518567,18.9238386486,14.5551186836,22.2804718218,12.5891946993,1.96592398427,5.32255715742,16.9579146643,2.66491917868,1.08489879132,2.62851317897,6.21086355031,0.0,0.0,1.96592398427,0.0,1.09217999126,4.20125236639,0.0,0.029124799767,5.88320955293,1.59458278724,3.79350516965,5.68661715451,49.9119705649,6.31644094947,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.68355905053],
			[0.991071428571,20.1737451737,15.4601029601,13.2963320463,22.3375160875,12.5321750322,0.764157014157,7.64157014157,14.6959459459,3.12902187902,1.33526383526,2.09942084942,5.96846846847,0.0,0.0,0.764157014157,0.0,1.24678249678,5.69498069498,0.0,0.699806949807,4.87451737452,0.152831402831,5.87998712999,3.78861003861,35.0940500813,6.43661518662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.56338481338],
			[1.28048780488,37.7584204413,33.5656213705,38.1300813008,33.193960511,16.2137049942,21.9163763066,21.5447154472,11.6492450639,0.882694541231,6.34146341463,2.67131242741,6.31823461092,6.00464576074,6.34146341463,3.22880371661,6.34146341463,4.4018583043,5.78397212544,5.65621370499,5.70267131243,0.232288037166,6.10917537747,0.0,5.30778164925,81.4916516727,2.86759581882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.13240418118],
			[1.21212121212,23.0134680135,23.2154882155,18.8215488215,27.4074074074,14.8905723906,3.93097643098,8.1228956229,19.2845117845,3.15656565657,2.59259259259,2.87037037037,6.27104377104,0.00841750841751,0.0,3.92255892256,0.0,1.57407407407,5.867003367,0.0,0.681818181818,6.31313131313,1.85185185185,6.1531986532,4.96632996633,44.9955609439,5.3771043771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6228956229],
			[0.963636363636,15.4888507719,11.6466552316,12.2898799314,14.845626072,1.47512864494,10.8147512864,14.0137221269,0.831903945111,0.0,0.0,0.0,1.47512864494,2.89022298456,2.83876500858,4.73413379074,0.351629502573,0.548885077187,5.37735849057,4.8885077187,3.19897084048,0.831903945111,0.0,0.0,0.0,38.0685214801,7.28644939966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.71355060034],
			[1.18987341772,25.0471316994,11.5270670617,20.1589011581,16.415297603,9.1166172906,11.0422838675,15.9305144088,0.484783194183,0.0,1.29275518449,1.40048478319,6.42337732292,3.13762456235,2.76057096687,4.75356854296,0.390519795314,4.44384594667,5.27875033665,5.27875033665,0.92916778885,0.484783194183,0.0,0.0,0.0,31.3268483703,6.34258012389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65741987611],
			[0.885964912281,19.1158589543,13.5574083724,16.1803022408,16.492965086,3.59562272017,12.5846795206,15.5202362341,0.972728851833,0.0,0.295292687163,0.0,3.300330033,3.54351224596,3.04846274101,5.54976550287,0.442939030745,0.972728851833,5.61924613514,5.5584505819,3.36981066528,0.972728851833,0.0,0.0,0.0,35.834803748,6.73267326733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26732673267],
			[2.38983050847,20.4111071042,35.50907561,22.88736627,33.0328164443,7.39271547061,15.4946507994,13.0183916336,20.0144248107,0.0,0.468806346917,1.23812958288,5.68577954081,3.79853347758,1.79108065873,6.19064791441,3.71438874865,0.973674720519,5.58961413631,0.528909724727,5.92619305205,6.31085467003,3.67832672196,6.49116480346,3.53407861522,43.672011711,4.40798172857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.59201827143],
			[1.63888888889,18.1994141034,28.94433982,29.7551789077,17.3885750157,18.1994141034,11.5557648044,0.0,17.3885750157,6.12575852689,6.21468926554,1.7367650136,4.12220129734,5.72295459301,1.59029085583,2.96087047499,1.28164888052,0.0,0.0,0.0,0.0,3.71416614354,4.90688428542,3.4996861268,5.26783845993,96.40928098,5.28562460766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.71437539234],
			[1.325,33.7146226415,37.0636792453,36.5448113208,34.233490566,12.8655660377,23.679245283,20.8490566038,13.3844339623,0.0,5.37735849057,1.12028301887,6.3679245283,6.1320754717,6.1320754717,5.04716981132,6.3679245283,3.39622641509,6.1320754717,4.97641509434,6.34433962264,1.6391509434,5.67216981132,0.60141509434,5.47169811321,50.8369731593,2.92216981132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.07783018868],
			[2.44444444444,30.303030303,32.6704545455,28.1881313131,34.7853535354,11.9633838384,16.2247474747,18.3396464646,16.4457070707,0.0,1.13636363636,4.57702020202,6.25,0.505050505051,5.11363636364,6.25,4.35606060606,3.0303030303,6.25,2.80934343434,6.25,6.25,2.46212121212,6.25,1.48358585859,33.7334445216,3.70265151515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.29734848485],
			[3.45945945946,30.3209459459,38.0701013514,31.0810810811,37.3099662162,12.4155405405,18.6655405405,17.9054054054,19.4045608108,0.147804054054,1.5625,4.62415540541,6.08108108108,2.17483108108,5.38429054054,6.08108108108,5.02533783784,2.87162162162,6.08108108108,2.87162162162,6.08108108108,6.08108108108,3.39949324324,6.08108108108,3.84290540541,33.9200740934,3.16089527027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.83910472973],
			[2.32,24.1551724138,31.1724137931,24.9655172414,30.3620689655,8.55172413793,16.4137931034,15.6034482759,14.7586206897,0.0,0.637931034483,1.56896551724,6.34482758621,1.91379310345,4.84482758621,6.0,3.65517241379,2.22413793103,6.44827586207,0.568965517241,6.36206896552,6.0,1.18965517241,5.96551724138,1.60344827586,33.8598408561,4.46724137931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.53275862069],
			[0.577142857143,22.0311173975,22.5685997171,22.9306930693,21.6690240453,9.8387553041,13.0919377652,12.1923620934,9.47666195191,0.0,2.37623762376,1.33521923621,6.12729844413,2.78925035361,3.14002828854,2.38189533239,4.78076379066,5.30693069307,2.73833097595,4.14710042433,0.0,0.379066478076,6.03111739745,0.0,3.06647807638,74.3793620648,5.54002828854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.45997171146],
			[1.59154929577,33.8776018946,35.8843325439,36.6197183099,33.1422161286,12.389380531,24.2303377789,21.4882213636,11.6539947651,0.0,5.3221986788,0.785242428019,6.28193942416,6.28193942416,6.28193942416,5.38451950642,6.28193942416,3.47750218123,6.28193942416,5.22248535461,6.50629440359,2.14383647015,4.49956375421,1.57048485604,3.44010968466,49.2388211499,3.02380655615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.97619344385],
			[1.14864864865,23.1637519873,11.319554849,13.8314785374,20.6518282989,13.8314785374,0.0,9.33227344992,11.319554849,2.32114467409,1.30365659777,5.29411764706,4.91255961844,0.0,0.0,0.0,0.0,1.11287758347,6.08903020668,0.0,2.13036565978,2.11446740859,0.0,6.2480127186,2.95707472178,55.9967905576,6.55166931638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.44833068362],
			[1.3137254902,18.2031021364,11.2452443664,12.0939420544,17.3544044483,12.0939420544,0.0,6.10916008194,11.2452443664,2.76558384548,0.263388937665,5.20193151888,3.86303775241,0.0,0.0,0.0,0.0,0.738952297337,4.98975709687,0.0,0.380450687738,2.94117647059,0.0,5.42873865964,2.87532923617,41.3537452563,7.05516534972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.94483465028],
			[1.32051282051,24.6203634553,13.6046801095,14.99875529,23.2262882748,14.7498132935,0.248941996515,9.87055016181,13.355738113,2.41473736619,1.7425939756,4.92905153099,5.66343042071,0.0,0.0,0.248941996515,0.0,1.91685337316,6.32312671148,0.0746825989544,1.55588747822,4.05775454319,0.186706497386,5.52651232263,3.58476474981,32.3062822517,6.17749564352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.82250435648],
			[1.06,12.4528301887,17.7735849057,16.8679245283,13.358490566,2.64150943396,14.2264150943,9.81132075472,3.54716981132,0.0,0.22641509434,0.0,2.41509433962,4.11320754717,2.18867924528,5.69811320755,2.22641509434,0.264150943396,5.58490566038,0.679245283019,3.28301886792,2.75471698113,0.0,0.792452830189,0.0,32.0714246207,6.97735849057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.02264150943],
			[1.21212121212,23.0134680135,23.2154882155,18.8215488215,27.4074074074,14.8905723906,3.93097643098,8.1228956229,19.2845117845,3.15656565657,2.59259259259,2.87037037037,6.27104377104,0.00841750841751,0.0,3.92255892256,0.0,1.57407407407,5.867003367,0.0,0.681818181818,6.31313131313,1.85185185185,6.1531986532,4.96632996633,44.9955609439,5.3771043771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6228956229],
			[1.00925925926,16.2419300034,12.6996262317,10.7798165138,18.1617397214,0.203873598369,10.5759429154,16.038056405,2.12368331634,0.0,0.0,0.0,0.203873598369,2.14067278287,2.77777777778,4.65511382943,1.00237852531,0.67957866123,5.06286102616,5.51308188923,4.78253482841,2.12368331634,0.0,0.0,0.0,50.325257418,7.10584437649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.89415562351],
			[1.07142857143,17.8285714286,17.5238095238,18.1333333333,17.219047619,3.67619047619,14.4571428571,14.1523809524,3.06666666667,0.0,0.457142857143,0.0,3.21904761905,4.41904761905,2.7619047619,5.86666666667,1.40952380952,0.914285714286,6.07619047619,2.8380952381,4.32380952381,3.02857142857,0.0,0.0380952380952,0.0,35.0584860177,6.46476190476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.53523809524],
			[1.1,20.4452690167,18.0333951763,20.612244898,17.866419295,5.36178107607,15.2504638219,15.0834879406,2.78293135436,0.0,1.33580705009,0.0,4.02597402597,4.58256029685,3.8961038961,5.6586270872,1.11317254174,0.760667903525,6.02968460111,3.0612244898,5.2319109462,2.63450834879,0.0,0.148423005566,0.0,36.4937695998,6.15213358071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.84786641929],
			[1.95833333333,36.0815602837,34.9290780142,38.6524822695,32.3581560284,19.0602836879,19.5921985816,17.0212765957,15.3368794326,3.01418439716,4.69858156028,4.96453900709,6.3829787234,3.63475177305,4.78723404255,6.3829787234,4.78723404255,3.01418439716,6.3829787234,4.25531914894,3.36879432624,6.3829787234,2.21631205674,4.25531914894,2.48226950355,33.7575217469,2.89893617021,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.10106382979],
			[1.15841584158,14.9530337649,30.8792417703,18.2956757214,27.5365998138,1.7263264788,16.5693492426,13.2267072861,14.3098925277,0.0,0.0,0.0,1.7263264788,0.956249471101,3.9434712702,6.00829313701,5.66133536431,0.0,3.7488364221,3.131082339,6.34678852501,6.13522890751,3.4611153423,4.5612253533,0.1523229246,39.5552634073,5.41677244648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.58322755352],
			[2.11428571429,23.5135135135,35.3667953668,26.7181467181,32.1621621622,9.53667953668,17.1814671815,13.9768339768,18.1853281853,0.0772200772201,0.0772200772201,3.12741312741,6.25482625483,0.733590733591,4.59459459459,6.138996139,5.71428571429,2.58687258687,6.21621621622,0.0,5.17374517375,6.25482625483,2.16216216216,5.59845559846,4.16988416988,29.1777171818,4.11196911197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88803088803],
			[2.13333333333,34.84375,39.3229166667,38.4375,35.7291666667,18.6458333333,19.7916666667,16.1979166667,19.53125,1.5625,5.36458333333,5.05208333333,6.66666666667,4.73958333333,4.89583333333,5.83333333333,4.32291666667,3.125,6.66666666667,0.989583333333,5.41666666667,5.83333333333,4.58333333333,5.46875,3.64583333333,33.033776343,2.58333333333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.41666666667],
			[2.0,29.4765020821,36.9422962522,30.5175490779,35.9012492564,12.3140987507,18.2034503272,17.1624033314,18.738845925,0.148720999405,2.85544318858,3.06365258775,6.24628197501,3.48007138608,4.78881618084,6.24628197501,3.68828078525,2.40928019036,5.9488399762,2.55800118977,6.24628197501,5.9488399762,3.80725758477,6.24628197501,2.73646638905,26.1443920687,3.35812016657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.64187983343],
			[0.916666666667,26.7045454545,9.80113636364,19.1761363636,17.3295454545,18.3238636364,0.852272727273,8.38068181818,8.94886363636,3.2196969697,3.26704545455,5.87121212121,5.96590909091,0.0,0.0,0.852272727273,0.0,2.22537878788,5.68181818182,0.0,0.473484848485,5.35037878788,1.13636363636,2.27272727273,0.189393939394,42.4847193317,6.34943181818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65056818182],
			[1.90909090909,31.1928811929,33.164983165,28.342953343,36.0149110149,17.2318422318,11.1111111111,13.961038961,22.0538720539,0.721500721501,5.18278018278,4.78595478595,6.54160654161,1.96007696008,0.012025012025,6.15680615681,2.9822029822,1.88792688793,6.27705627706,0.0,5.79605579606,5.96440596441,4.67772967773,6.15680615681,5.25493025493,35.6058878296,3.56421356421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.43578643579],
			[1.0243902439,19.8461091754,14.2131242741,12.4128919861,21.6463414634,12.3838559814,0.0290360046458,7.46225319396,14.1840882695,1.74216027875,1.98896631823,3.81823461092,4.83449477352,0.0,0.0,0.0290360046458,0.0,1.2049941928,5.29907084785,0.0,0.95818815331,3.9343786295,0.116144018583,5.87979094077,4.2537746806,38.5076210652,6.59407665505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.40592334495],
			[1.17391304348,23.5462515656,15.6557523707,17.355519771,21.8464841653,16.4430130614,0.912506709608,7.1032385042,14.7432456611,3.18482733942,2.27232062981,5.31400966184,5.67185543031,0.0,0.0,0.912506709608,0.0,1.37770620862,5.02773304706,0.0,0.697799248524,4.65199499016,0.107353730542,6.22651637144,3.75738056897,30.7001763805,6.07979960637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.92020039363],
			[1.40625,27.4131944444,13.4722222222,17.0486111111,23.8368055556,16.6493055556,0.399305555556,10.7638888889,13.0729166667,2.08333333333,2.82986111111,6.09375,5.64236111111,0.0,0.0,0.399305555556,0.0,2.55208333333,6.04166666667,0.0,2.17013888889,4.25347222222,0.0173611111111,6.38888888889,2.41319444444,28.1662106779,5.91145833333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.08854166667]
		])

		self.target = np.array([
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
		])
		
	
	
	def onlyEuclidianDistance(self):
		self.trainingInput = np.array([
			[0.4445767355627692]  ,
			[0.6774886589481145]  ,
			[0.7221286918257778]  ,
			[1.1666299976807721]  ,
			[0.602516357794024]   ,
			[0.8506249674245339]  ,
			[0.5405341433296452]  ,
			[0.6519383592369001]  ,
			[0.6125009353372124]  ,
			[0.6944807254701106]  ,
			[0.5142983844883302]  ,
			[0.8024783694585215]  ,
			[0.5550684589069624]  ,
			[0.5446586003558502]  ,
			[0.7021441909647607]  ,
			[0.9445060508299237]  ,
			[0.9725408898846954]  ,
			[1.1814377345239522]  ,
			[0.5285214519192142]  ,
			[0.6977884469390362]  ,
			[0.9396966105459164]  ,
			[0.9487222228673623]  ,
			[0.8414123903891978]  ,
			[0.7930949087559783]  ,
			[0.6367328454618765]  ,
			[0.9024900806328437]  ,
			[1.0688355366203157]  ,
			[0.7496094033871902]  ,
			[0.5660856738963561]  ,
			[0.8752606738704759]  ,
			[0.7951680747642227]  ,
			[0.8637377856984009]  ,
			[0.8755402828018433]  ,
			[0.9227913145667905]  ,
			[0.7462199531961937]  ,
			[0.8678259564049468]  ,
			[0.568739884949334]   ,
			[0.8393205993536647]  ,
			[0.8191670733738105]  ,
			[0.7903603645759596]  ,
			[0.9864867491807003]  ,
			[0.8931418129522674]  ,
			[0.7384996892251653]  ,
			[0.6823976353832378]  ,
			[0.9528646398897618]  ,
			[0.9186364407731992]  ,
			[0.8541456945307699]  ,
			[0.9810546991850717]  ,
			[0.615132996499706]   ,
			[0.6243432469245669]  ,
			[0.8166616395450592]  ,
			[0.8730522937021761]  ,
			[0.5715620762557144]  ,
			[0.9566806563085124]  ,
			[0.8451905112195791]  ,
			[0.5355095225728621]  ,
			[0.7083341813807774]  ,
			[0.9253643039766983]  ,
			[0.6566200784913948]  ,
			[0.6681528850537971]  ,
			[0.9498694776301727]  ,
			[0.7050032038129431]  ,
			[0.5616938036848318]  ,
			[0.4159216276372367]  ,
			[0.6076515090960095]  ,
			[0.5515455880286019]  ,
			[0.6061364145292323]  ,
			[1.0190904007456805]  ,
			[1.092138097946439]   ,
			[0.8805932213404494]  ,
			[0.8834349820328227]  ,
			[0.40606114868387344] ,
			[0.6646289385434925]  ,
			[0.2677764455904797]  ,
			[0.38391978886753053] ,
			[0.501243277029367]   ,
			[0.5589205272509503]  ,
			[0.4958046029247671]  ,
			[0.6402153230347508]  ,
			[0.5944871802197977]  ,
			[0.6005891858279313]  ,
			[0.8450668268949655]  ,
			[0.8939009388127549]  ,
			[0.5313863406995835]  ,
			[0.5590708450475343]  ,
			[0.6315186104257026]  ,
			[0.820420410586372]   ,
			[0.7229040556816336]  ,
			[0.7083051103604031]  ,
			[0.8625988509802616]  ,
			[0.6280044904892297]  ,
			[1.007399189691587]   ,
			[0.8726017370088062]  ,
			[0.6806103794619023]  ,
			[0.5158973264008909]  ,
			[0.7818078594147706]  ,
			[0.8543128067467766]  ,
			[0.8573059333608529]  ,
			[0.8514928841441194]  ,
			[0.7711180748315054]  ,
			[0.999033458667186]   ,
			[0.8611212361858755]  ,
			[1.0176536220361294]  ,
			[0.7437906092938157]  ,
			[0.3242378962648286]  ,
			[0.6517986137789277]  ,
			[1.0096503951755293]  ,
			[0.9389744430215154]  ,
			[0.6632306489805998]  ,
			[1.0390966057360629]  ,
			[0.7733817845665922]  ,
			[0.8036776159393736]  ,
			[1.0074246736872232]  ,
			[0.7053560701156215]  ,
			[0.6140733805212265]  ,
			[0.7190388972550069]  ,
			[0.6401382893785268]  ,
			[0.9442793992706072]  ,
			[0.8245745206068409]  ,
			[0.8789735208425281]  ,
			[0.7953732052994527]  ,
			[0.8191219772176194]  ,
			[0.9982394112986708]  ,
			[0.7018810016255179]  ,
			[1.6298330334534825]  ,
			[0.8999112188776455]  ,
			[0.7613704296016046]  ,
			[0.6265369674058009]  ,
			[0.7166960749591774]  ,
			[0.8734402342194256]  ,
			[1.9281856196004192]  ,
			[1.0167394631858495]  ,
			[0.674668890432913]   ,
			[0.6784014818671538]  ,
			[0.6771968171227886]  ,
			[1.4875872412968072]  ,
			[0.9847764229982973]  ,
			[1.119935811151464]   ,
			[0.8270749051264858]  ,
			[0.6461256450331946]  ,
			[0.6414284924142913]  ,
			[0.8999112188776455]  ,
			[1.0065051483601168]  ,
			[0.7011697203534416]  ,
			[0.7298753919962954]  ,
			[0.6751504349370844]  ,
			[0.7911052681457753]  ,
			[0.5835543436362731]  ,
			[0.6606755268608633]  ,
			[0.5228878413748903]  ,
			[0.8496943866345863]  ,
			[0.7121177565914623]  ,
			[0.7701524213048652]  ,
			[0.6140035276103734]  ,
			[0.5633242135576995]
		])

		self.target = np.array([
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
		])
		
	
	
	def onlySubRegionPercents(self):
		self.trainingInput = np.array([
			[-1.0,-0.687931510632,-0.372549019608,-0.681303507318,-0.382491024579,-0.875724937862],
			[-0.560793465578,-0.510851808635,-0.965460910152,-0.937456242707,-0.651808634772,-0.373628938156],
			[-0.999078057775,-0.565150583897,-0.333435771358,-0.532267977873,-0.570067609096,-1.0],
			[-0.954022988506,-0.277279168635,-0.59313493938,-0.45740828216,-0.718154621319,-1.0],
			[-0.478260869565,-0.638198757764,-0.961180124224,-0.919254658385,-0.712732919255,-0.290372670807],
			[-1.0,-0.772004889976,-0.318459657702,-0.570904645477,-0.401589242054,-0.937041564792],
			[-0.940496822646,-0.487579433853,-0.390525707683,-0.560947429232,-0.620450606586,-1.0],
			[-0.627801911381,-0.452302345786,-0.93570807993,-0.978105994787,-0.661511728931,-0.344569939183],
			[-0.69019248396,-0.580201649863,-0.971280171097,-0.870760769936,-0.488237091353,-0.399327833792],
			[-0.973558152903,-0.597240850738,-0.361563517915,-0.665069936769,-0.522130676375,-0.8804368653],
			[-0.729283240075,-0.534239275246,-0.662136957101,-0.909405808686,-0.567279509726,-0.597655209166],
			[-0.762094102054,-0.474486414844,-0.675281643472,-1.0,-0.561298873426,-0.526838966203],
			[-0.640901771337,-0.42769726248,-0.457004830918,-0.969404186795,-0.85346215781,-0.65152979066],
			[-0.717999559374,-0.636483807006,-0.697730777704,-0.918484247632,-0.513989865609,-0.515311742675],
			[-0.675229357798,-0.601834862385,-0.671559633028,-0.809174311927,-0.563302752294,-0.678899082569],
			[-0.693320171109,-0.563672260612,-0.603817045081,-0.915761763738,-0.597894044093,-0.625534715367],
			[-0.617272208484,-0.409168727411,-0.710861708199,-0.966901274491,-0.800266311585,-0.495529769831],
			[-0.992824527071,-0.853228962818,-0.444553163731,-0.644161774299,-0.347358121331,-0.71787345075],
			[-0.730897662542,-0.537222549597,-0.584757415046,-1.0,-0.576114712237,-0.571007660577],
			[-0.763873775843,-0.270583968081,-0.519042437432,-1.0,-0.889009793254,-0.55749002539],
			[-0.938842557493,-0.632549911549,-0.407632044478,-0.735658327015,-0.428860247662,-0.856456911802],
			[-0.953757225434,-0.573614416865,-0.462087725264,-0.76946616797,-0.500850051003,-0.740224413465],
			[-0.993410214168,-0.800658978583,-0.433278418451,-0.556836902801,-0.418451400329,-0.797364085667],
			[-0.99369830642,-0.825915714848,-0.525797558094,-0.709334383616,-0.336746750689,-0.608507286333],
			[-0.928277282086,-0.597803706246,-0.492793411119,-0.686341798216,-0.568634179822,-0.726149622512],
			[-0.754603682946,-0.55164131305,-0.708967173739,-0.922337870296,-0.580064051241,-0.482385908727],
			[-0.989040127276,-0.667668375464,-0.334983206647,-0.674385716811,-0.464733957928,-0.869188615874],
			[-0.942764359651,-0.60178607672,-0.454028820783,-0.711386239091,-0.524254110006,-0.765780393749],
			[-0.761904761905,-0.571428571429,-0.802197802198,-0.868131868132,-0.428571428571,-0.567765567766],
			[-0.682604272635,-0.602238046796,-0.839267548321,-0.866734486267,-0.544252288911,-0.46490335707],
			[-0.850049455984,-0.399802176063,-0.4215628091,-0.720672601385,-0.631256181998,-0.97665677547],
			[-1.0,-0.853926963482,-0.254627313657,-0.618809404702,-0.315657828914,-0.956978489245],
			[-0.608884596813,-0.74794785128,-1.0,-0.868662481893,-0.378078223081,-0.396426846934],
			[-0.978623074505,-0.522791574976,-0.376296762025,-0.712668972021,-0.508330713612,-0.901288902861],
			[-0.717171717172,-0.575757575758,-0.543434343434,-1.0,-0.587878787879,-0.575757575758],
			[-0.797323135755,-0.46845124283,-0.483747609943,-1.0,-0.648183556405,-0.602294455067],
			[-0.728710462287,-0.480535279805,-0.512165450122,-1.0,-0.591240875912,-0.687347931873],
			[-0.761775852734,-0.461288576069,-0.612344342177,-1.0,-0.626962642122,-0.537628586898],
			[-0.759590792839,-0.476555839727,-0.531116794544,-0.817561807332,-0.461210571185,-0.953964194373],
			[-0.684210526316,-0.527459954233,-0.561784897025,-0.986270022883,-0.561784897025,-0.678489702517],
			[-0.709525843657,-0.469457496796,-0.537804357112,-1.0,-0.655702691158,-0.627509611277],
			[-0.913194444444,-0.659722222222,-0.597222222222,-0.590277777778,-0.277777777778,-0.961805555556],
			[-0.618550724638,-0.702028985507,-0.99884057971,-0.653333333333,-0.317101449275,-0.710144927536],
			[-0.952799121844,-0.612513721186,-0.397914379802,-0.651481888035,-0.650933040615,-0.734357848518],
			[-0.523602033406,-0.443718228032,-0.921568627451,-0.98547567175,-0.750181554103,-0.375453885258],
			[-1.0,-0.833712984055,-0.431662870159,-0.728929384966,-0.333712984055,-0.671981776765],
			[-0.516164994426,-0.832032701598,-1.0,-0.698996655518,-0.419546636938,-0.53325901152],
			[-0.67725376965,-0.567532884184,-0.95700994546,-0.982675649663,-0.408405518126,-0.407122232916],
			[-0.963113875188,-0.761526914004,-0.326184859532,-0.553935234827,-0.463435556509,-0.93180355994],
			[-0.960069444444,-0.652777777778,-0.428819444444,-0.616319444444,-0.543402777778,-0.798611111111],
			[-0.787769784173,-0.44964028777,-0.571942446043,-0.640287769784,-0.643884892086,-0.906474820144],
			[-0.693774537297,-0.588334268087,-0.813796971397,-0.960740325294,-0.43466068424,-0.508693213685],
			[-0.703351179853,-0.621653777513,-0.948443386873,-0.915129883006,-0.436446559588,-0.374975213167],
			[-0.667421668554,-0.666666666667,-0.962249905625,-0.867119667799,-0.428463571159,-0.408078520196],
			[-0.677304964539,-0.237588652482,-0.962765957447,-1.0,-0.767730496454,-0.354609929078],
			[-0.947084762371,-0.522782949535,-0.341499265066,-0.644292013719,-0.589416952474,-0.954924056835],
			[-0.694189602446,-0.515290519878,-0.938073394495,-0.998470948012,-0.454128440367,-0.399847094801],
			[-1.0,-0.618483412322,-0.536334913112,-0.710900473934,-0.556872037915,-0.577409162717],
			[-0.93627031651,-0.744225834046,-0.479469632164,-0.59751924722,-0.491017964072,-0.751497005988],
			[-1.0,-0.611911623439,-0.619596541787,-0.704130643612,-0.581171950048,-0.483189241114],
			[-0.881235154394,-0.638954869359,-0.733966745843,-0.672209026128,-0.548693586698,-0.524940617577],
			[-0.948201438849,-0.53381294964,-0.702158273381,-0.720863309353,-0.535251798561,-0.559712230216],
			[-1.0,-0.75872600349,-0.522251308901,-0.788830715532,-0.359947643979,-0.570244328098],
			[-1.0,-0.693069306931,-0.510891089109,-0.753663366337,-0.405544554455,-0.636831683168],
			[-0.879899916597,-0.542952460384,-0.773144286906,-0.738115095913,-0.422852376981,-0.643035863219],
			[-0.972789115646,-0.515063168124,-0.717201166181,-0.762876579203,-0.52380952381,-0.508260447036],
			[-1.0,-0.475202885482,-0.565374211001,-0.710550045086,-0.635707844905,-0.613165013526],
			[-0.651761517615,-0.318879855465,-0.812556458898,-0.991869918699,-0.80081300813,-0.424119241192],
			[-0.753216374269,-0.391228070175,-0.83918128655,-1.0,-0.759064327485,-0.25730994152],
			[-0.888788153521,-0.497733454216,-0.480205500151,-0.666364460562,-0.55696585071,-0.90994258084],
			[-0.711053089643,-0.27589208007,-0.791122715405,-1.0,-0.808529155788,-0.413402959095],
			[-0.720565149137,-0.419152276295,-0.447409733124,-0.679748822606,-0.755102040816,-0.978021978022],
			[-0.865728207905,-0.518137520303,-0.457498646454,-0.662154845696,-0.55278830536,-0.943692474283],
			[-0.67014069828,-0.620635747785,-0.805106826472,-0.945805106826,-0.551328817092,-0.406982803544],
			[-0.727748691099,-0.583246073298,-0.679581151832,-0.916753926702,-0.571727748691,-0.520942408377],
			[-0.86450492183,-0.563404748118,-0.396641574986,-0.483497394325,-0.691951360741,-1.0],
			[-0.685990338164,-0.175845410628,-0.83768115942,-1.0,-0.901449275362,-0.399033816425],
			[-0.775117571612,-0.456177853784,-0.485250106883,-0.551945275759,-0.731509191962,-1.0],
			[-0.631547736707,-0.422415497134,-0.973512551888,-0.997232654675,-0.653686499308,-0.321605060289],
			[-0.60993227991,-0.376523702032,-0.881264108352,-1.0,-0.79683972912,-0.335440180587],
			[-0.627093954843,-0.478878368536,-0.898397669337,-0.970138383103,-0.640568099053,-0.384923525127],
			[-0.995575221239,-0.642857142857,-0.21997471555,-0.413400758534,-0.728824273072,-0.999367888748],
			[-0.811487481591,-0.347569955817,-0.471281296024,-0.538291605302,-0.831369661267,-1.0],
			[-0.942583732057,-0.606060606061,-0.281233386497,-0.450292397661,-0.719829877725,-1.0],
			[-0.924763542562,-0.627687016337,-0.717540842648,-0.687876182287,-0.515477214101,-0.526655202064],
			[-0.864661654135,-0.56992481203,-0.603007518797,-0.709273182957,-0.589974937343,-0.663157894737],
			[-0.866625501698,-0.60296387774,-0.643717196666,-0.667798703303,-0.607286199444,-0.611608521149],
			[-0.905266438143,-0.588033655344,-0.633530694921,-0.6435026488,-0.604861327516,-0.624805235276],
			[-0.806926297095,-0.492325256882,-0.712799695547,-0.63237346188,-0.597107700114,-0.758467588482],
			[-0.614568925772,-0.276164130936,-0.765790686953,-1.0,-0.959428307976,-0.384047948363],
			[-0.613913043478,-0.262111801242,-0.887701863354,-1.0,-0.914534161491,-0.321739130435],
			[-0.616411592315,-0.290784760664,-0.804623901009,-1.0,-0.878215564963,-0.409964181049],
			[-0.723878040425,-0.518328194587,-0.496402877698,-0.755395683453,-0.716341212744,-0.789653991093],
			[-0.615568453397,-0.570501877774,-0.631956299078,-0.80607715944,-0.713895527484,-0.662000682827],
			[-0.745010183299,-0.638289205703,-0.508757637475,-0.561710794297,-0.611405295316,-0.93482688391],
			[-0.739292364991,-0.569832402235,-0.694599627561,-0.661080074488,-0.56052141527,-0.774674115456],
			[-0.789995493466,-0.494366831906,-0.889139251915,-0.612438035151,-0.530419107706,-0.683641279856],
			[-0.832707408672,-0.625810856948,-0.614885626494,-0.733697507682,-0.532946398088,-0.659952202117],
			[-0.958435207824,-0.625101874491,-0.702526487368,-0.643031784841,-0.497962510187,-0.572942135289],
			[-1.0,-1.0,-0.862767154106,-0.386951631046,-0.239595050619,-0.510686164229],
			[-0.989827856025,-1.0,-0.754303599374,-0.35289514867,-0.397496087637,-0.505477308294],
			[-0.538043478261,-0.385869565217,-0.804347826087,-0.915760869565,-0.633152173913,-0.722826086957],
			[-0.867397260274,-0.661369863014,-0.635068493151,-0.684383561644,-0.523287671233,-0.628493150685],
			[-0.375683060109,-0.255464480874,-0.430327868852,-0.99043715847,-0.994535519126,-0.953551912568],
			[-0.704206642066,-0.493726937269,-0.62036900369,-0.870996309963,-0.659335793358,-0.651365313653],
			[-0.682545521427,-0.600147139967,-0.541291153209,-0.59977929005,-0.681074121758,-0.895162773588],
			[-0.662739322533,-0.592783505155,-0.69145802651,-0.70913107511,-0.617820324006,-0.726067746686],
			[-0.89306751246,-0.683129436641,-0.709409454765,-0.666817701254,-0.485576196949,-0.561999697931],
			[-0.544981145628,-0.625785598851,-0.902316394326,-0.696175255881,-0.672472616269,-0.558268989047],
			[-0.545893719807,-0.521739130435,-0.95229468599,-0.774154589372,-0.678743961353,-0.527173913043],
			[-0.803221424413,-0.766349699204,-0.557539297497,-0.491558315544,-0.599456627207,-0.781874636134],
			[-0.817373587701,-0.531394702723,-0.769216521578,-0.808483052417,-0.634747175403,-0.438784960178],
			[-0.673865138828,-0.583957690613,-0.810489202292,-0.827236668136,-0.576024680476,-0.528426619656],
			[-0.713778128701,-0.605211212002,-0.893801816028,-0.707856296881,-0.587445716542,-0.491906829846],
			[-0.799342741156,-0.552677363232,-0.6064179393,-0.747535279335,-0.637347767253,-0.656678909724]
		])

		self.target = np.array([
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[1,0,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,1,0,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,1,0],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,1],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0],
			[0,0,0,0]
		])
		
	
	
	def onlyHistogram(self):
		self.trainingInput = np.array([
			[4.05420991926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.94579008074],
			[5.74324324324,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.25675675676],
			[4.81781376518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18218623482],
			[6.90624444049,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.09375555951],
			[5.20903954802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.79096045198],
			[6.23240938166,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.76759061834],
			[4.02873563218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.97126436782],
			[4.53242835596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.46757164404],
			[2.49696969697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.50303030303],
			[4.23611111111,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.76388888889],
			[6.47076023392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.52923976608],
			[6.40861742424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.59138257576],
			[5.31468531469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.68531468531],
			[5.32863849765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.67136150235],
			[5.52521008403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.47478991597],
			[6.25600698995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.74399301005],
			[6.74469787915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.25530212085],
			[7.14484804891,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.85515195109],
			[6.34920634921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65079365079],
			[5.82653061224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.17346938776],
			[6.19811113552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.80188886448],
			[5.66772056609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.33227943391],
			[5.74160811866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.25839188134],
			[5.53244307482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.46755692518],
			[3.81611468117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.18388531883],
			[4.30995475113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.69004524887],
			[4.95614035088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.04385964912],
			[4.01108325637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.98891674363],
			[3.27160493827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.72839506173],
			[3.66346955796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.33653044204],
			[5.54491525424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.45508474576],
			[5.64488636364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.35511363636],
			[4.01058823529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.98941176471],
			[5.91343659675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.08656340325],
			[5.00378787879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.99621212121],
			[5.09833333333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.90166666667],
			[5.51864156515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.48135843485],
			[5.38699127907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.61300872093],
			[3.8781512605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.1218487395],
			[3.80456349206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.19543650794],
			[5.70169440012,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.29830559988],
			[4.20352941176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.79647058824],
			[4.38271604938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.61728395062],
			[5.10945273632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.89054726368],
			[5.22392290249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.77607709751],
			[6.95738203957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.04261796043],
			[6.67949334616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.32050665384],
			[6.32975654783,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.67024345217],
			[5.17543859649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.82456140351],
			[4.11036036036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88963963964],
			[4.42333785617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.57666214383],
			[4.56604883789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.43395116211],
			[5.53652968037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.46347031963],
			[3.87955182073,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.12044817927],
			[4.64056776557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.35943223443],
			[5.79254930606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.20745069394],
			[5.58145491803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.41854508197],
			[5.18498942918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.81501057082],
			[6.50684931507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.49315068493],
			[5.52269250382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.47730749618],
			[6.58719086874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.41280913126],
			[4.76666666667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.23333333333],
			[4.92112676056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.07887323944],
			[4.0318627451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.9681372549],
			[4.78260869565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.21739130435],
			[4.35758835759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.64241164241],
			[5.34688995215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.65311004785],
			[5.24780273438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.75219726563],
			[4.81182795699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18817204301],
			[4.81527093596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.18472906404],
			[4.6862026862,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.3137973138],
			[3.54337152209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.45662847791],
			[3.67007672634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.32992327366],
			[2.10526315789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.89473684211],
			[2.83950617284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16049382716],
			[2.83108108108,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16891891892],
			[2.55060728745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.44939271255],
			[2.56721311475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.43278688525],
			[3.11831153389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.88168846611],
			[3.75262054507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.24737945493],
			[4.04597701149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.95402298851],
			[3.49206349206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.50793650794],
			[4.8170310702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.1829689298],
			[2.78033794163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.21966205837],
			[3.12820512821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.87179487179],
			[3.0910099889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.9089900111],
			[3.17073170732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.82926829268],
			[3.96470588235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.03529411765],
			[3.58245149912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.41754850088],
			[3.08348410442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.91651589558],
			[3.07713498623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.92286501377],
			[5.93027810419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.06972189581],
			[6.73413643367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26586356633],
			[5.84415584416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.15584415584],
			[4.72485768501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.27514231499],
			[4.78197249049,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.21802750951],
			[5.30271982116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.69728017884],
			[5.13096222774,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.86903777226],
			[6.81535855449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.18464144551],
			[6.80294486216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.19705513784],
			[6.16703296703,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.83296703297],
			[4.61734693878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.38265306122],
			[5.04240882103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.95759117897],
			[3.88007054674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.11992945326],
			[2.95986622074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.04013377926],
			[3.60331339162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.39668660838],
			[5.05608283003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.94391716997],
			[4.67299578059,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.32700421941],
			[4.71340388007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.28659611993],
			[4.04513888889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.95486111111],
			[4.92216117216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.07783882784],
			[5.65498969679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.34501030321],
			[6.80403700589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.19596299411],
			[5.56553202895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.43446797105],
			[5.85497835498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.14502164502],
			[4.69166666667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.30833333333],
			[5.03894708568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.96105291432],
			[5.3848003848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6151996152],
			[4.21212121212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.78787878788],
			[6.71984805318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.28015194682],
			[6.40625,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.59375],
			[6.47209653092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.52790346908],
			[6.31644094947,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.68355905053],
			[6.43661518662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.56338481338],
			[2.86759581882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.13240418118],
			[5.3771043771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6228956229],
			[7.28644939966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.71355060034],
			[6.34258012389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65741987611],
			[6.73267326733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26732673267],
			[4.40798172857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.59201827143],
			[5.28562460766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.71437539234],
			[2.92216981132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.07783018868],
			[3.70265151515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.29734848485],
			[3.16089527027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.83910472973],
			[4.46724137931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.53275862069],
			[5.54002828854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.45997171146],
			[3.02380655615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.97619344385],
			[6.55166931638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.44833068362],
			[7.05516534972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.94483465028],
			[6.17749564352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.82250435648],
			[6.97735849057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.02264150943],
			[5.3771043771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6228956229],
			[7.10584437649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.89415562351],
			[6.46476190476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.53523809524],
			[6.15213358071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.84786641929],
			[2.89893617021,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.10106382979],
			[5.41677244648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.58322755352],
			[4.11196911197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88803088803],
			[2.58333333333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.41666666667],
			[3.35812016657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.64187983343],
			[6.34943181818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.65056818182],
			[3.56421356421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.43578643579],
			[6.59407665505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.40592334495],
			[6.07979960637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.92020039363],
			[5.91145833333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.08854166667]
		])

		self.target = np.array([
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
		])
	
	
	def tarExtracted(self):
		# Determine the minimal non-zero value of the matrice
		try:
			#min = np.nanmin(self.currentExtracted)											# fmin identity seems buggy
			min = np.min(self.currentExtracted[~np.isnan(self.currentExtracted)])			# use this hack instead
		except ValueError:
			min = 0
		
		# Remove this value to all elements of the matrice
		self.currentExtracted = self.currentExtracted-np.array([min])
	
	
	def getEuclidianDistance(self, a, b):
		return np.linalg.norm(a-b)

	def getAvgEuclidianDistance(self):
		# The reference point is taken at the center of the matrix
		h, v = self.currentExtracted.shape
		ref_h = h/2
		ref_v = v/2
		
		# Then we determine all euclidian distances between relevant points and that reference point
		distances = []
		
		# If the reference point is not a number, it will be considered as 0
		if np.isnan(self.currentExtracted[ref_h, ref_v]):
			reference = 0.0
		else:
			reference = self.currentExtracted[ref_h, ref_v]
	
		for i in range(h):
			for j in range(v):
				if not np.isnan(self.currentExtracted[i,j]) and (i!=ref_h or j!=ref_v):
					distances.append(self.getEuclidianDistance(np.array([i, j, self.currentExtracted[i,j]]), np.array([ref_h, ref_v, reference])))
		
		return np.average(distances)
	
	def removeEmptyColumnsRows(self):
		# Remove all zeros columns and rows from both matrices
		column = self.currentBinary.sum(axis=0).astype(int)
		row = self.currentBinary.sum(axis=1).astype(int)

		# Remove empty left columns
		i = 0
		while i<len(column) and column[i]==0:
			self.currentExtracted = self.currentExtracted[:,1:]
			self.currentBinary = self.currentBinary[:,1:]
			i += 1

		# Remove empty right columns
		i = len(column)-1
		while i>=0 and column[i]==0:
			self.currentExtracted = self.currentExtracted[:,:-1]
			self.currentBinary = self.currentBinary[:,:-1]
			i -= 1

		# Remove empty top rows
		i = 0
		while i<len(row) and row[i]==0:
			self.currentExtracted = self.currentExtracted[1:,:]
			self.currentBinary = self.currentBinary[1:,:]
			i += 1

		# Remove empty bottom rows
		i = len(row)-1
		while i>=0 and row[i]==0:
			self.currentExtracted = self.currentExtracted[:-1,:]
			self.currentBinary = self.currentBinary[:-1,:]
			i -= 1
		
	
	
	
	def rotate(self, hand, elbow):
		# The dataset can be oriented in 4 different ways that can be rotated back to form a vertical line between the hand and the elbow joints
		
		# First, determine the relative position of the elbow
		if hand[0]-elbow[0]<0:
			# the elbow is located in the lower part
			v = elbow[0]-hand[0]
			up = False
		else:
			# the elbow is located in the upper part
			v = hand[0]-elbow[0]
			up = True
		
		if hand[1]-elbow[1]<0:
			# the elbow is located in the right part
			h = elbow[1]-hand[1]
			left = False
		else:
			# the elbow is located in the left part
			h = hand[1]-elbow[1]
			left = True
		
		
		# Check if the elbow is on top/bottom extrems to determine the rotation degree
		if v>h:
			if not up:
				rotation = 0
			else:
				rotation = 2
		else:
			if left:
				rotation = 1
			else:
				rotation = -1
		
		# Apply rotation
		self.currentBinary = np.rot90(self.currentBinary, rotation)
		self.currentExtracted = np.rot90(self.currentExtracted, rotation)
		
		
		# Debug
		#if up:
		#	if left:
		#		print "pointing down right"
		#	else:
		#		print "pointing down left"
		#elif left:
		#	print "pointing up right"
		#else:
		#	print "pointing up left"
	
	
	def getHistogram(self):
		hist, bin_edges = np.histogram(~np.isnan(self.currentExtracted), density=True)
		return hist
	
	def sift(self, input):
		data = np.copy(self.currentExtracted).astype(np.uint8)
		gray = cv2.cvtColor(data, cv2.COLOR_GRAY2BGR)

		sift = cv2.SIFT()
		kp = sift.detect(gray, None)
		
		for i in range(len(kp)):
			x = kp[i].pt[0]
			y = kp[i].pt[1]
			size = kp[i].size
			dir_in_degrees = kp[i].angle
			laplacian = kp[i].class_id
			hessian = round(kp[i].response)
			
			input.append(laplacian)
			input.append(hessian)
			
			print laplacian
			print hessian
			print dir_in_degrees
			print size
	
	def surf(self, input):
		data = np.copy(self.currentExtracted).astype(np.uint8)
		gray = cv2.cvtColor(data, cv2.COLOR_GRAY2BGR)
		
		surfDetector = cv2.FeatureDetector_create("SURF")
		surfDescriptorExtractor = cv2.DescriptorExtractor_create("SURF")
		kp = surfDetector.detect(gray)
		(kp, descriptors) = surfDescriptorExtractor.compute(gray, kp)
		
		for i in range(len(kp)):
			x = kp[i].pt[0]
			y = kp[i].pt[1]
			size = kp[i].size
			dir_in_degrees = kp[i].angle
			laplacian = kp[i].class_id
			hessian = round(kp[i].response)
			
			input.append(laplacian)
			input.append(hessian)
			
			print laplacian
			print hessian
			print dir_in_degrees
			print size
	
	
	def display(self, b):
		x,y = b.shape
		for i in range(x):
			text = ""
			for j in range(y):
				if np.isnan(b[i,j]) or int(b[i,j]) == 0:
					text += " "
				else:
					text += str(int(b[i,j]))
			print text
		print
	
	
	
	
	
	
	def keepRange(self, value, max):
		if value < 0:
			return 0
		elif value > max:
			return max
		else: 
			return value

	def countWithinArea(self, data, total, h1, v1, h2,v2):
		# Return the percentage of actual data within a restricted area
		if self.currentW != 0 and self.currentH != 0:
			return np.sum(data[v1:v2, h1:h2], dtype=np.int32)/float(total)*100
		else:
			return 0
	
	def diviseInSix(self, input, data):
		h,w = data.shape
		total = np.sum(data)
	
		input.append(self.countWithinArea(data, total, 0, 0, w/2, h/3)) # upper left
		input.append(self.countWithinArea(data, total, 0, h/3, w/2, 2*(h/3))) # middle left
		input.append(self.countWithinArea(data, total, 0, 2*(h/3), w/2, h)) # lower left
		
		input.append(self.countWithinArea(data, total, w/2, 0, w, h/3)) # upper right
		input.append(self.countWithinArea(data, total, w/2, h/3, w, 2*(h/3))) # middle right
		input.append(self.countWithinArea(data, total, w/2, 2*(h/3), w, h)) # lower right


	
	def normalizeInput(self, input, old_min=0, old_max=100):
		# Normalize the data in a range from -1 to 1
		old_range = old_max - old_min
		new_min = -1
		new_range = 1 - new_min
	
		return [float((n - old_min) / float(old_range) * new_range + new_min) for n in input]
	
	def normalizeInput1(self, data):
		# Retrieve the depth map and convert it to a numpy array of floats
		depthMap = np.array(data["depth_map"]).astype(float)
	
	
		# Retrieve the position of the pointing hand
		if data["hand"]["type"]==LEFT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["left"])
		elif data["hand"]["type"]==RIGHT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["right"])
		else:
			v,h,d = (0,0,0)
	
		# Determine the bounding box around the pointing hand. Here fixed to the biggest one for hands at least as far as 500mm
		shift = 150
	
		# Determine the coordinates of the bounding box to extract
		x1 = keepRange(int(h-shift), 480)
		y1 = keepRange(int(v-shift), 640)
		x2 = keepRange(int(h+shift)+1, 480)
		y2 = keepRange(int(v+shift)+1, 640)
	
		# Extract the informations within the bounding box
		startH = shift-h+x1
		startV = shift-v+y1
		endH = shift+x2-h
		endV = shift+y2-v
	
		max = (2*shift)+1
		extracted = np.zeros(max*max).reshape(max, max)
		extracted[startV:endV, startH:endH] = depthMap[y1:y2, x1:x2]
	
		# Extract the hand from the background with a threshold
		start = d-200
		end = d+200
	
		x,y = extracted.shape
		for j in range(x):
			for k in range(y):
				if extracted[j][k]<start or extracted[j][k]>end:
					extracted[j][k] = 0
				else:
					extracted[j][k] = 1
	
	
		# Count the number of occurences by row and columns
		v1 = np.ravel(extracted.sum(axis=0))
		v2 = np.ravel(extracted.sum(axis=1))
	
		# Concatenate these values
		final = np.hstack((v1,v2))
	
	
		# Convert all values to a 0-1 range-restricted pool (with 1 for close points and 0 for far ones)
		#rangeRestricted = (Dmax-extracted)/(Dmax-Dmin)
	
		return final






	def normalizeInput2(self, data):
		# Retrieve the depth map and convert it to a numpy array of floats
		depthMap = np.array(data["depth_map"]).astype(float)
	
	
		# Retrieve the position of the pointing hand
		if data["hand"]["type"]==Dataset.LEFT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["left"])
		elif data["hand"]["type"]==Dataset.RIGHT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["right"])
		else:
			# Take arbitrarily the right hand
			v,h,d = map(int, data["skeleton"]["hand"]["right"])
	
		# Determine the bounding box around the pointing hand. Here fixed to the biggest one for hands at least as far as 500mm
		if d != 0:
			shift = int((1000.0/d)*90)
		else:
			shift = 1
	
		# Determine the coordinates of the bounding box to extract
		x1 = self.keepRange(int(h-shift), 480)
		y1 = self.keepRange(int(v-shift), 640)
		x2 = self.keepRange(int(h+shift)+1, 480)
		y2 = self.keepRange(int(v+shift)+1, 640)
	
		# Extract the informations within the bounding box
		startH = shift-h+x1
		startV = shift-v+y1
		endH = shift+x2-h
		endV = shift+y2-v
	
		max = (2*shift)+1
		extracted = np.zeros(max*max).reshape(max, max)
		extracted[startV:endV, startH:endH] = depthMap[y1:y2, x1:x2]
	
		# Extract the hand from the background with a threshold
		start = d-200
		end = d+200
		
		x,y = extracted.shape
		for j in range(x):
			for k in range(y):
				if extracted[j][k]<start or extracted[j][k]>end:
					extracted[j][k] = 0
				else:
					extracted[j][k] = 1
	
		# Remove all zeros columns and rows
		foo = np.rot90(extracted[~np.all(extracted == 0, axis=1)])
		binary = np.rot90(foo[~np.all(foo == 0, axis=1)], -1)
		
		# Hold the ratio
		self.currentH, self.currentW = binary.shape
		
		input = []
		if self.currentW != 0:
			input.append(self.currentH/float(self.currentW))
		else: input.append(0)
		

		# Hold the percentage of actual data within sub-areas
		input.append(self.countWithinArea(binary, 0, 0, self.currentW/2, self.currentH)) # left
		input.append(self.countWithinArea(binary, self.currentW/2, 0, self.currentW, self.currentH)) # right
		input.append(self.countWithinArea(binary, 0, 0, self.currentW, self.currentH/2)) # up
		input.append(self.countWithinArea(binary, 0, self.currentH/2, self.currentW, self.currentH)) # down

		# Hold the value for recursively divided areas
		self.diviseInFour(input, binary, True)

		# Hold the average distance between all actual data and the center
		input.append(self.getAverageDistance(binary))
		
		return input
	
	
	def getFeaturesLight(self, data):
		# Retrieve the depth map and convert it to a numpy array of floats
		depthMap = np.array(data["depth_map"]).astype(float)
		
	
		# Retrieve the position of the pointing hand
		if data["hand"]==LightDataset.LEFT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["left"])
			v2,h2,d2 = map(int, data["skeleton"]["elbow"]["left"])
		elif data["hand"]==LightDataset.RIGHT_HAND:
			v,h,d = map(int, data["skeleton"]["hand"]["right"])
			v2,h2,d2 = map(int, data["skeleton"]["elbow"]["right"])
		else:
			# Take arbitrarily the right hand
			v,h,d = map(int, data["skeleton"]["hand"]["right"])
			v2,h2,d2 = map(int, data["skeleton"]["elbow"]["right"])
	
		# Determine the bounding box around the pointing hand regarding to the depth of the hand
		if d != 0:
			shift = int((1000.0/d)*90)
		else:
			shift = 1
	
		# Determine the coordinates of the bounding box to extract
		x1 = self.keepRange(int(h-shift), 480)
		y1 = self.keepRange(int(v-shift), 640)
		x2 = self.keepRange(int(h+shift)+1, 480)
		y2 = self.keepRange(int(v+shift)+1, 640)
	
		# Extract the informations within the bounding box
		startH = shift-h+x1
		startV = shift-v+y1
		endH = shift+x2-h
		endV = shift+y2-v
	
		max = (2*shift)+1
		self.currentExtracted = np.zeros(max*max).reshape(max, max)
		self.currentExtracted[startV:endV, startH:endH] = depthMap[y1:y2, x1:x2]
		self.currentBinary = np.copy(self.currentExtracted)
	
		# Extract the hand from the background with a threshold
		start = d-100
		end = d+100
		
		x,y = self.currentBinary.shape
		for j in range(x):
			for k in range(y):
				if self.currentBinary[j][k]<start or self.currentBinary[j][k]>end or self.currentBinary[j][k]==0:
					self.currentBinary[j][k] = 0
					self.currentExtracted[j][k] = np.NaN
				else:
					self.currentBinary[j][k] = 1
		
		
		
		# Remove all zeros columns and rows from both matrices
		self.removeEmptyColumnsRows()
		
		# Rotate the hand to form a vertical line between the hand and the elbow
		self.rotate([v,h], [v2,h2])
		
		self.tarExtracted()
		
		
		
		# /----------------------------------------\
		# | Depth map of the hand is now extracted |
		# |        Starting getting features       |
		# \----------------------------------------/
		
		
		
		# /---------------\
		# |   Feature 1   |
		# |   Map ratio   |
		# \---------------/
		
		
		# Hold the ratio
		self.currentH, self.currentW = self.currentBinary.shape
		
		input = []
		#if self.currentW != 0:
		#	input.append(self.currentH/float(self.currentW))
		#else:
		#	input.append(0)
		
		
		
		
		# /------------------------------------\
		# |          Feature 2 to 7            |
		# |   Percent of data in sub-regions   |
		# \------------------------------------/
		
		
		
		# Hold the percentage of actual data within sub-areas
		self.diviseInSix(input, self.currentBinary)
		
		
		
		# /--------------------------------\
		# |           Feature 8            |
		# |   Average euclidian distance   |
		# \--------------------------------/
		
		
		
		# Hold the average distance between all actual data and the center
		#input.append(self.getAvgEuclidianDistance())
		
		
		
		# /----------------------\
		# |   Feature 9 to 19    |
		# |       Histogram      |
		# \----------------------/
		
		
		
		# Histogram of the extracted hand
		#input.extend(self.getHistogram())
		
		
		
		
		return self.normalizeInput(input)
	
	
	def getFeaturesLive(self, data):
		# Retrieve the position of the pointing hand
		if data.hand==LiveDataset.LEFT_HAND:
			v,h,d = map(int, data.skeleton["hand"]["left"])
			v2,h2,d2 = map(int, data.skeleton["elbow"]["left"])
		elif data.hand==LiveDataset.RIGHT_HAND:
			v,h,d = map(int, data.skeleton["hand"]["right"])
			v2,h2,d2 = map(int, data.skeleton["elbow"]["right"])
		else:
			# Take arbitrarily the right hand
			v,h,d = map(int, data.skeleton["hand"]["right"])
			v2,h2,d2 = map(int, data.skeleton["elbow"]["right"])
	
		# Determine the bounding box around the pointing hand regarding to the depth of the hand
		if d != 0:
			shift = int((1000.0/d)*90)
		else:
			shift = 1
	
		# Determine the coordinates of the bounding box to extract
		x1 = self.keepRange(int(h-shift), 480)
		y1 = self.keepRange(int(v-shift), 640)
		x2 = self.keepRange(int(h+shift)+1, 480)
		y2 = self.keepRange(int(v+shift)+1, 640)
	
		# Extract the informations within the bounding box
		startH = shift-h+x1
		startV = shift-v+y1
		endH = shift+x2-h
		endV = shift+y2-v
	
		max = (2*shift)+1
		self.currentExtracted = np.zeros(max*max).reshape(max, max)
		self.currentExtracted[startV:endV, startH:endH] = data.depth_map[y1:y2, x1:x2]
		self.currentBinary = np.copy(self.currentExtracted)
	
		# Extract the hand from the background with a threshold
		start = d-100
		end = d+100
		
		self.currentBinary = self.thresholdBinary(self.currentBinary, start, end)
		self.currentExtracted = self.thresholdExtracted(self.currentExtracted, start, end)
		
		# Remove all zeros columns and rows from both matrices
		self.removeEmptyColumnsRows()
		
		# Rotate the hand to form a vertical line between the hand and the elbow
		self.rotate([v,h], [v2,h2])
		
		self.tarExtracted()
		
		
		# /----------------------------------------\
		# | Depth map of the hand is now extracted |
		# |        Starting getting features       |
		# \----------------------------------------/
		
		
		
		# Hold the ratio
		self.currentH, self.currentW = self.currentBinary.shape
		
		input = []
		
		
		# /------------------------------------\
		# |          Feature 1 to 6            |
		# |   Percent of data in sub-regions   |
		# \------------------------------------/
		
		
		
		# Hold the percentage of actual data within sub-areas
		self.diviseInSix(input, self.currentBinary)
		
		
		
		return self.normalizeInput(input)
	
	
	def getData(self):
		print "self.trainingInput = np.array(["
		
		for i in range(len(self.trainingInput)):
			text = "	["
			for j in range(len(self.trainingInput[i])):
				text+= "{0}".format(str(self.trainingInput[i][j]))
				if j<len(self.trainingInput[i])-1:
					text += ","
			text += "]"
			if i<len(self.trainingInput)-1:
				text += ","
			print text
		
		print "])"
		print
		
		print "self.target = np.array(["
		
		for i in range(len(self.target)):
			text = "	["
			for j in range(len(self.target[i])):
				text+= "{0}".format(str(self.target[i][j]))
				if j<len(self.target[i])-1:
					text += ","
			text += "]"
			if i<len(self.target)-1:
				text += ","
			print text
		
		print "])"
		
	
	
	def getWeights(self):
		# Stopped at Iteration 30301
		# Error: 9.953473
		# Training rate: 0.1
		# Momentum: 0.05
		# Hidden layers: 15
		# Features: only sub-region percents
		return [
				np.array([[ -1.41040880e+01,  1.90293774e+01,  2.80894870e+01, -3.60434360e+01,  1.79037821e+01, -9.69066510e+00, -1.30642500e+00],
				 [ -1.07562358e+01,  6.66307303e+00,  2.72292762e+00, -3.09187842e+00,  1.35699561e-02, 4.45837704e+00, 1.07290037e-01],
				 [ 6.31790698e+00,  1.62322886e+01,  5.04809523e+00, -1.33352638e+01,  1.21240711e+01, -1.74135430e+01, -2.34482310e+00],
				 [ 1.61406219e+01, -1.62283685e+01, -1.51661543e+01, 2.67217025e+01, -2.36362367e+01, 2.44169750e+00, 2.56869669e+00],
				 [ -1.71613896e+00, -9.87461964e-01, -7.61620509e-01, 1.60930452e+00, -2.66771352e+00,  1.03694082e-01, 1.10998402e+00],
				 [ -1.05719212e+01,  9.99702139e+00,  1.94435631e+00, -1.69678648e+01,  2.40826402e+01, -7.59351962e+00, -2.38847975e-01],
				 [ -1.44032869e+01, -2.74275851e-01, -7.37703393e+00, 1.75759100e+01,  1.07549416e+01,  1.39110842e+00, -2.00374280e+00],
				 [ 4.41253764e+00, -6.09736359e+00,  3.25519650e+00, 1.33079976e+01, -2.20902225e+01, 8.43424010e+00, -2.03229896e-01],
				 [ 6.56695803e+00,  1.84598117e+00,  5.80260256e+00, 4.49485733e+00, -2.88059208e+01, -1.22257336e+00, 2.68469457e+00],
				 [ -2.23397451e+00, -1.20195346e+01, -1.38603671e+01, 1.60653984e+01, -2.90001592e+00,  5.50452973e+00, 2.51788122e+00],
				 [ -1.56626498e+01,  1.36902170e+01, -6.83522766e+00, -6.70481421e+00,  9.42561190e+00,  6.09653659e+00, -7.13429858e-02],
				 [ -2.01850082e+00,  8.62428464e-01, -1.48809576e+01, -1.60224143e+01,  2.94265737e+01, -1.07648352e+00, 8.55669806e-01],
				 [ 7.11032227e+00, -2.52569937e+00,  3.54303040e+00, -1.29189751e+01,  1.05328126e+01, -6.88524207e+00, 2.39027337e-01],
				 [ -1.54913068e+01,  9.44119857e+00, -6.79385938e+00, -1.15716734e+01,  1.78974924e+01,  1.23317960e+01, -1.45773740e+00],
				 [ 8.78281354e+00, -1.02419336e+01,  7.82498881e-01, -9.83347324e+00,  2.70070038e+01, -6.01002987e+00, -2.55193532e+00]]), 
				np.array([[ -2.00769880e+01, -1.00266737e-01, -6.43548127e+00, -1.11144151e+01, -3.50596504e-01, -6.29886050e+00, 1.14172095e+01,  1.74822148e+00, -9.34250414e+00, -6.67163485e+00, -2.00800976e+01,  1.02629085e+01, -1.45924321e+01,  3.03351890e+00, -1.02969635e+01, 1.32761514e+00],
				 [ 1.06194504e+00, -4.50800770e+00,  9.78045757e-01, -1.26353976e+01, -1.70159183e+00,  6.10667724e+00, -3.01203436e+00, -9.08348733e+00, -4.44258033e-02, 1.66245392e+01, -8.14183094e+00, -1.61940406e+01, -1.08798088e+01, -4.96599427e-03,  1.47035657e+01, -2.12862728e+00],
				 [ -1.06058594e+01, -8.62836389e+00,  6.94702533e+00, 6.00818386e+00, -1.78716165e-01, -1.31542624e+01, -7.11069355e+00, -8.39639149e+00,  7.34747215e+00, -8.59198819e+00,  6.97229367e+00, -1.29081149e+01, 4.03522702e+00, -2.53825152e+01, -1.49094909e+01, -9.93461981e-01],
				 [ 6.71137255e+00, -1.58075140e+01, -6.88131140e+00, 1.74982611e+00, -1.88290287e-01,  5.40611790e+00, -6.82979118e+00,  1.42737624e+01, -8.68425778e+00, -8.64200552e+00, -4.56467258e+00, -4.92117827e+00, 1.31714011e+00,  3.73637253e+00, -4.96067357e+00, -5.49140663e+00]])
				]
	
	def run(self):
		lvInputOriginal = np.array(self.trainingInput)
		lvTargetOriginal = np.array(self.target)

		lFuncs = [None, gaussian, sgm]
		
		
		ran = np.arange(50)
		ran.fill(15)
		
		
		# Try to change the number of hidden layers
		for hidden in ran:
			print("{0} hidden layers with a training rate of {1} and a momentum of {2}".format(hidden, 0.1, 0.1))
			######
			
			
			lvInput = deepcopy(lvInputOriginal)
			lvTarget = deepcopy(lvTargetOriginal)
			
			
			
			
			bpn = BackPropagationNetwork((len(self.trainingInput[0]), hidden, len(self.target[0])), lFuncs)

			lnMax = 50000
			lnErr = 10
			errMax = 1e100
			for i in range(lnMax+1):
				err = bpn.trainEpoch(lvInput, lvTarget, trainingRate=0.1, momentum=0.05)
				if i%500 == 0:
					print("Iteration {0}\tError: {1:0.6f}".format(i, err))
				if err <= lnErr:
					print("Minimum error reached at iteration {0}".format(i))
					break
				if err >= errMax:
					print("Will not converge past iteration {0}".format(i))
					break
		
			# Display output
			print("Stopped at Iteration {0}\tError: {1:0.6f}".format(i, err))
			lvOutput = bpn.run(lvInput)
			for i in range(lvInput.shape[0]):
				print("Ouput {0}: {1}".format(i, lvOutput[i]))
		
			print ""
			print ""
			
			print "weights:"
			print bpn.getWeights()
		
		
			#lvInput = np.array(self.testingInput)
			#lvOutput = bpn.run(lvInput)
			#for i in range(lvInput.shape[0]):
			#	print("Ouput {0}: {1}".format(i, lvOutput[i]))
		
	def test(self, data):
		# First, retrieve the features from the input
		lvInput = np.array([self.getFeaturesLive(data)])
		
		# Then, run the network
		lvOutput = self.bpn.run(lvInput)
		
		for i in range(lvInput.shape[0]):
			# If a gesture is recognised:
			if lvOutput[i][np.argmax(lvOutput[i])] > 0.5:
				# Determine which one:
				if np.argmax(lvOutput[i]) == 0:
					return "Right"
				elif np.argmax(lvOutput[i]) == 1:
					return "Front Right"
				elif np.argmax(lvOutput[i]) == 2:
					return "Front Left"
				elif np.argmax(lvOutput[i]) == 3:
					return "Left"
				else:
					return "Undetermined"
			else:
				return "None"
		return "Unknown"